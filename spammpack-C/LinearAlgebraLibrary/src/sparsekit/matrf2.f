      subroutine matrf2(M,N,C,INDEX,ALPHA,NN,NZ,A,SNR,RNR,FEJLM)

c*********************************************************************72
c
cc MATRF2 generates sparse (rectangular or square) matrices.
c
c   PURPOSE
c
c   The subroutine generates sparse (rectangular or square) matrices.
c   The dimensions of the matrix and the average number of nonzero
c   elements per row can be specified by the user. Moreover, the user
c   can also change the sparsity pattern and the condition number of the
c   matrix. The non-zero elements of the desired matrix will be
c   accumulated (in an arbitrary order) in the first NZ positions of
c   array A. The column and the row numbers of the non-zero element
c   stored in A(I), I=1,...,NZ, will be found in SNR(I) and RNR(I),
c   respectively. The matrix generated by this subroutine is of the
c   class F(M,N,C,R,ALPHA) (see reference).
c
c   Note: If A is the sparse matrix of type F(M,N,C,R,ALPHA), then
c
c           min|A(i,j)| = 1/ALPHA,
c
c           max|A(i,j)| = max(INDEX*N - N,10*ALPHA).
c
c
c   CONTRIBUTOR: Ernest E. Rothman
c                Cornell Theory Center/Cornell National Supercomputer
c                Facility.
c                e-mail address: BITNET:   eer@cornellf
c                                INTERNET: eer@cornellf.tn.cornell.edu
c
c   minor modifications by Y. Saad. April 26, 1990.
c
c   Note: This subroutine has been copied from the following reference.
c         The allowable array sizes have been changed.
c
c   REFERENCE: Zlatev, Zahari; Schaumburg, Kjeld; Wasniewski, Jerzy;
c      "A testing Scheme for Subroutines Solving Large Linear Problems",
c      Computers and Chemistry, Vol. 5, No. 2-3, pp. 91-100, 1981.
c
c
c   INPUT PARAMETERS
c
c   M    - Integer. The number of rows in the desired matrix.
c          N < M+1 < 9000001 must be specified.
c
c   N    - Integer. The number of columns in the desired matrix.
c          21 < N < 9000001 must be specified.
c
c   C    - Integer. The sparsity pattern can be changed by means of this
c          parameter.  10 < C < N-10  must be specified.
c
c   INDEX - Integer.  The average number of non-zero elements per row in
c           the matrix will be equal to INDEX.
c           1 < INDEX < N-C-8 must be specified.
c
c   ALPHA - Real. The condition number of the matrix can be changed
c           BY THIS PARAMETER. ALPHA > 0.0 MUST BE SPECIFIED.
c           If ALPHA is approximately equal to 1.0 then the generated
c           matrix is well-conditioned. Large values of ALPHA will
c           usually produce ill-conditioned matrices. Note that no
c           round-off errors during the computations in this subroutine
c           are made if ALPHA = 2**I (where I is an arbitrary integer
c           which produces numbers in the machine range).
c
c   NN    - Integer. The length of arrays A, RNR, and SNR (see below).
c           INDEX*M+109 < NN < 9000001 must be specified.
c
c
c   OUTPUT PARAMETERS
c
c   NZ    - Integer. The number of non-zero elements in the matrix.
c
c   A(NN) - Real array. The non-zero elements of the matrix generated
c           are accumulated in the first NZ locations of array A.
c
c   SNR(NN) - INTEGER array. The column number of the non-zero element
c           kept in A(I), I=1,...NZ, is stored in SNR(I).
c
c   RNR(NN) - Integer array. The row number of the non-zero element
c           kept in A(I), I=1,...NZ, is stored in RNR(I).
c
c   FEJLM - Integer. FEJLM=0 indicates that the call is successful.
c           Error diagnostics are given by means of positive values of
c           this parameter as follows:
c             FEJLM = 1    -  N       is out of range.
c             FEJLM = 2    -  M       is out of range.
c             FEJLM = 3    -  C       is out of range.
c             FEJLM = 4    -  INDEX   is out of range.
c             FEJLM = 5    -  NN      is out of range.
c             FEJLM = 7    -  ALPHA   is out of range.
c
c
c
c
      double precision A, ALPHA, ALPHA1
      INTEGER M, N, NZ, C, NN, FEJLM, M1, NZ1, RR1, RR2, RR3, K
      INTEGER M2, N2
      INTEGER SNR, RNR
      DIMENSION A(NN), SNR(NN), RNR(NN)
      M1 = M
      FEJLM = 0
      NZ1 = INDEX*M + 110
      K = 1
      ALPHA1 = ALPHA
      INDEX1 = INDEX - 1
c
c  Check the parameters.
c
      IF(N.GE.22) GO TO 1
2     FEJLM = 1
      RETURN
1     IF(N.GT.9000000) GO TO 2
      IF(M.GE.N) GO TO 3
4     FEJLM = 2
      RETURN
3     IF(M.GT.9000000) GO TO 4
      IF(C.LT.11)GO TO 6
      IF(N-C.GE.11)GO TO 5
6     FEJLM = 3
      RETURN
5     IF(INDEX.LT.1) GO TO 12
      IF(N-C-INDEX.GE.9)GO TO 13
12    FEJLM = 4
13    IF(NN.GE.NZ1)GO TO 7
8     FEJLM = 5
      RETURN
7     IF(NN.GT.9000000)GO TO 8
      IF(ALPHA.GT.0.0)GO TO 9
      FEJLM = 6
      RETURN
9     CONTINUE
c
c  End of the error check. Begin to generate the non-zero elements of
c  the required matrix.
c
      DO 20 I=1,N
      A(I) = 1.0
      SNR(I) = I
20    RNR(I) = I
      NZ = N
      J1 = 1
      IF(INDEX1.EQ.0) GO TO 81
      DO 21 J = 1,INDEX1
      J1 = -J1
      DO 22 I=1,N
      A(NZ+I) = dble ( J1 * J * I )
      IF(I+C+J-1.LE.N)SNR(NZ+I) = I + C + J - 1
      IF(I+C+J-1.GT.N)SNR(NZ+I) = C + I + J - 1 - N
22    RNR(NZ + I) = I
21    NZ = NZ + N
81    RR1 = 10
      RR2 = NZ
      RR3 = 1
25    CONTINUE
      DO 26 I=1,RR1
      A(RR2 + I) = ALPHA* dble ( I )
      SNR(RR2+I) = N - RR1 + I
      RNR(RR2+I) = RR3
26    CONTINUE
      IF(RR1.EQ.1) GO TO 27
      RR2 = RR2 + RR1
      RR1 = RR1 - 1
      RR3 = RR3 + 1
      GO TO 25
27    NZ = NZ + 55
29    M1 = M1 - N
      ALPHA = 1.0/ALPHA
      IF(M1.LE.0) GO TO 28
      N2 = K*N
      IF(M1.GE.N)M2 = N
      IF(M1.LT.N)M2 = M1
      DO 30 I=1,M2
      A(NZ+I) = ALPHA* dble ( K + 1 )
      SNR(NZ + I) = I
30    RNR(NZ + I) = N2 + I
      NZ = NZ + M2
      IF(INDEX1.EQ.0) GO TO 82
      J1 = 1
      DO 41 J = 1,INDEX1
      J1 = -J1
      DO 42 I = 1,M2
      A(NZ+I) = ALPHA* dble (J*J1)*( dble ((K+1)*I)+1.0)
      IF(I+C+J-1.LE.N)SNR(NZ+I) = I + C + J - 1
      IF(I+C+J-1.GT.N)SNR(NZ+I) = C + I + J - 1 - N
42    RNR(NZ + I) = N2 + I
41    NZ = NZ +M2
82    K = K + 1
      GO TO 29
28    CONTINUE
      ALPHA = 1.0/ALPHA1
      RR1 = 1
      RR2 = NZ
35    CONTINUE
      DO 36 I = 1,RR1
      A(RR2+I) = ALPHA* dble (RR1+1-I)
      SNR(RR2+I) = I
      RNR(RR2+I) = N - 10 + RR1
36    CONTINUE
      IF(RR1.EQ.10) GO TO 34
      RR2 = RR2 + RR1
      RR1 = RR1 + 1
      GO TO 35
34    NZ = NZ + 55
      ALPHA = ALPHA1
      RETURN
      END

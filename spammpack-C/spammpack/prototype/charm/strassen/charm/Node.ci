module Node
{
  extern module Messages;
  chare Node
  {
    entry Node (int tier, int blocksize, int iLower, int jLower, int iUpper, int jUpper);
    entry [sync] NodeMsg   * info ();
    entry [sync] DataMsg   * getData ();
    entry [sync] DoubleMsg * get (int i, int j);
    entry [sync] EmptyMsg  * set (int i, int j, double aij);
    entry [sync] EmptyMsg  * setBlock (int iLower, int jLower, int iUpper, int jUpper,
        double ABlock[(iUpper-iLower)*(jUpper-jLower)]);
#if defined(CALLBACK)
    entry void matmul (CProxy_Node A, CProxy_Node B, int productIndex, CkCallback &done);
    entry void matmulDone (IntMsg *index);
#elif defined(FUTURES)
    entry [threaded] void matmul (CProxy_Node A, CProxy_Node B, int productIndex, CkFuture f);
#else
#error "FIXME"
#endif
  };
};

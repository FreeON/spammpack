module multiplyelement
{
  extern module node;
  extern module messages;
  array [3D] MultiplyElement
  {
    entry MultiplyElement (int blocksize, int tier, int depth, CProxy_Node A,
        CProxy_Node B, CProxy_Node C);
    entry [threaded] void multiply (double tolerance, CkCallback &cb);
    entry [threaded] void pruneProduct (double tolerance,
        CProxy_Node ANodes,
        CProxy_Node BNodes,
        int NElement,
        bool convolutionExists[NElement*NElement*NElement],
        CProxy_MultiplyElement convolution,
        CkCallback &cb);
    entry void enable (void);
    entry void disable (void);
    entry void storeBack (CkCallback &cb);
    entry void printPE (CkCallback &cb);
  };
};

# This code was auto-generated by generate_SSE_assembly.py.
#
# The command line was:
#
# generate_SSE_assembly.py -N 4 --name spamm_stream_kernel
#
# Code for a kernel matrix of 4x4 basic matrix blocks.

# C API (as defined in spamm_kernel.h):
#
# struct spamm_multiply_stream_t
# {
#   struct spamm_data_t *A;
#   struct spamm_data_t *B;
#   struct spamm_data_t *C;
# };
#
# void
# spamm_stream_kernel (const unsigned int number_stream_elements,
#     float alpha,
#     float tolerance,
#     struct multiply_stream_t *multiply_stream);
#
# End of C API.

# The matrix elements in the kernel block are layed out in the following order.
# The basic matrix blocks are of size 4x4 to be able to take advantage fully of
# single precision SSE instructions. Within the 4x4 blocks, the matrix elements
# are layed out in row-major order. The blocks are themselves ordered in
# row-major order within the kernel block.

# Function ABI.
#define number_stream_elements %rdi
#define alpha                  %xmm0
#define tolerance              %xmm1
#define multiply_stream        %rsi

# Define loop variables.
#define index        %rax
#define base_pointer %rdx

# Define pointers to matrix data nodes in stream.
#define A %r8
#define B %r9
#define C %r10

  # Function prolog.
  .text
  .align 256
  .global spamm_stream_kernel
  .type spamm_stream_kernel, @function

spamm_stream_kernel:

  # Push used registers on stack.
  push index
  push base_pointer
  push A
  push B
  push C

  # Copy alpha into all 4 elements of SSE register.
  shufps $0x0, alpha, alpha

  # Test whether number_stream_elements is zero.
  test number_stream_elements, number_stream_elements
  jbe stream_done

  # Set loop index to zero.
  xor base_pointer, base_pointer
  xor index, index

  .align 16
stream_loop:

  # Set the base pointer using sizeof(multiply_stream_t) = 24 (0x18).
  imul $0x18, base_pointer, base_pointer

  # Load pointers to stream matrix blocks.
  mov (multiply_stream, base_pointer, 1), A
  mov 0x8(multiply_stream, base_pointer, 1), B
  mov 0x10(multiply_stream, base_pointer, 1), C

  # Reset C(1,1) matrix block accumulators.
  xorps %xmm2, %xmm2
  xorps %xmm3, %xmm3
  xorps %xmm4, %xmm4
  xorps %xmm5, %xmm5

  .align 16
jump_1:

  # Check norm of product ||A(1,1)||*||B(1,1)||.
  movss 0x10(A), %xmm6
  mulss 0x10(B), %xmm6
  comiss tolerance, %xmm6
  jbe jump_2

  # Calculate C(1,1) += A(1,1)*B(1,1).
  movaps 0xc0(B), %xmm7
  movaps 0xd0(B), %xmm8
  movaps 0xe0(B), %xmm9
  movaps 0xf0(B), %xmm10
  movaps 0x4c0(A), %xmm11
  movaps 0x4d0(A), %xmm12
  movaps 0x4e0(A), %xmm13
  mulps %xmm7, %xmm11
  mulps %xmm8, %xmm12
  addps %xmm11, %xmm2
  movaps 0x4f0(A), %xmm14
  mulps %xmm9, %xmm13
  addps %xmm12, %xmm2
  movaps 0x500(A), %xmm15
  mulps %xmm10, %xmm14
  addps %xmm13, %xmm2
  movaps 0x510(A), %xmm6
  mulps %xmm7, %xmm15
  addps %xmm14, %xmm2
  movaps 0x520(A), %xmm11
  mulps %xmm8, %xmm6
  addps %xmm15, %xmm3
  movaps 0x530(A), %xmm12
  mulps %xmm9, %xmm11
  addps %xmm6, %xmm3
  movaps 0x540(A), %xmm13
  mulps %xmm10, %xmm12
  addps %xmm11, %xmm3
  movaps 0x550(A), %xmm14
  mulps %xmm7, %xmm13
  addps %xmm12, %xmm3
  movaps 0x560(A), %xmm15
  mulps %xmm8, %xmm14
  addps %xmm13, %xmm4
  movaps 0x570(A), %xmm6
  mulps %xmm9, %xmm15
  addps %xmm14, %xmm4
  movaps 0x580(A), %xmm11
  mulps %xmm10, %xmm6
  addps %xmm15, %xmm4
  movaps 0x590(A), %xmm12
  mulps %xmm7, %xmm11
  addps %xmm6, %xmm4
  movaps 0x5a0(A), %xmm13
  mulps %xmm8, %xmm12
  addps %xmm11, %xmm5
  movaps 0x5b0(A), %xmm14
  mulps %xmm9, %xmm13
  addps %xmm12, %xmm5
  mulps %xmm10, %xmm14
  addps %xmm13, %xmm5
  addps %xmm14, %xmm5

  .align 16
jump_2:

  # Check norm of product ||A(1,2)||*||B(2,1)||.
  movss 0x14(A), %xmm15
  mulss 0x20(B), %xmm15
  comiss tolerance, %xmm15
  jbe jump_3

  # Calculate C(1,1) += A(1,2)*B(2,1).
  movaps 0x1c0(B), %xmm6
  movaps 0x1d0(B), %xmm11
  movaps 0x1e0(B), %xmm12
  movaps 0x1f0(B), %xmm13
  movaps 0x5c0(A), %xmm14
  movaps 0x5d0(A), %xmm7
  movaps 0x5e0(A), %xmm8
  mulps %xmm6, %xmm14
  mulps %xmm11, %xmm7
  addps %xmm14, %xmm2
  movaps 0x5f0(A), %xmm9
  mulps %xmm12, %xmm8
  addps %xmm7, %xmm2
  movaps 0x600(A), %xmm10
  mulps %xmm13, %xmm9
  addps %xmm8, %xmm2
  movaps 0x610(A), %xmm15
  mulps %xmm6, %xmm10
  addps %xmm9, %xmm2
  movaps 0x620(A), %xmm14
  mulps %xmm11, %xmm15
  addps %xmm10, %xmm3
  movaps 0x630(A), %xmm7
  mulps %xmm12, %xmm14
  addps %xmm15, %xmm3
  movaps 0x640(A), %xmm8
  mulps %xmm13, %xmm7
  addps %xmm14, %xmm3
  movaps 0x650(A), %xmm9
  mulps %xmm6, %xmm8
  addps %xmm7, %xmm3
  movaps 0x660(A), %xmm10
  mulps %xmm11, %xmm9
  addps %xmm8, %xmm4
  movaps 0x670(A), %xmm15
  mulps %xmm12, %xmm10
  addps %xmm9, %xmm4
  movaps 0x680(A), %xmm14
  mulps %xmm13, %xmm15
  addps %xmm10, %xmm4
  movaps 0x690(A), %xmm7
  mulps %xmm6, %xmm14
  addps %xmm15, %xmm4
  movaps 0x6a0(A), %xmm8
  mulps %xmm11, %xmm7
  addps %xmm14, %xmm5
  movaps 0x6b0(A), %xmm9
  mulps %xmm12, %xmm8
  addps %xmm7, %xmm5
  mulps %xmm13, %xmm9
  addps %xmm8, %xmm5
  addps %xmm9, %xmm5

  .align 16
jump_3:

  # Check norm of product ||A(1,3)||*||B(3,1)||.
  movss 0x18(A), %xmm10
  mulss 0x30(B), %xmm10
  comiss tolerance, %xmm10
  jbe jump_4

  # Calculate C(1,1) += A(1,3)*B(3,1).
  movaps 0x2c0(B), %xmm15
  movaps 0x2d0(B), %xmm14
  movaps 0x2e0(B), %xmm7
  movaps 0x2f0(B), %xmm8
  movaps 0x6c0(A), %xmm9
  movaps 0x6d0(A), %xmm6
  movaps 0x6e0(A), %xmm11
  mulps %xmm15, %xmm9
  mulps %xmm14, %xmm6
  addps %xmm9, %xmm2
  movaps 0x6f0(A), %xmm12
  mulps %xmm7, %xmm11
  addps %xmm6, %xmm2
  movaps 0x700(A), %xmm13
  mulps %xmm8, %xmm12
  addps %xmm11, %xmm2
  movaps 0x710(A), %xmm10
  mulps %xmm15, %xmm13
  addps %xmm12, %xmm2
  movaps 0x720(A), %xmm9
  mulps %xmm14, %xmm10
  addps %xmm13, %xmm3
  movaps 0x730(A), %xmm6
  mulps %xmm7, %xmm9
  addps %xmm10, %xmm3
  movaps 0x740(A), %xmm11
  mulps %xmm8, %xmm6
  addps %xmm9, %xmm3
  movaps 0x750(A), %xmm12
  mulps %xmm15, %xmm11
  addps %xmm6, %xmm3
  movaps 0x760(A), %xmm13
  mulps %xmm14, %xmm12
  addps %xmm11, %xmm4
  movaps 0x770(A), %xmm10
  mulps %xmm7, %xmm13
  addps %xmm12, %xmm4
  movaps 0x780(A), %xmm9
  mulps %xmm8, %xmm10
  addps %xmm13, %xmm4
  movaps 0x790(A), %xmm6
  mulps %xmm15, %xmm9
  addps %xmm10, %xmm4
  movaps 0x7a0(A), %xmm11
  mulps %xmm14, %xmm6
  addps %xmm9, %xmm5
  movaps 0x7b0(A), %xmm12
  mulps %xmm7, %xmm11
  addps %xmm6, %xmm5
  mulps %xmm8, %xmm12
  addps %xmm11, %xmm5
  addps %xmm12, %xmm5

  .align 16
jump_4:

  # Check norm of product ||A(1,4)||*||B(4,1)||.
  movss 0x1c(A), %xmm13
  mulss 0x40(B), %xmm13
  comiss tolerance, %xmm13
  jbe jump_5

  # Calculate C(1,1) += A(1,4)*B(4,1).
  movaps 0x3c0(B), %xmm10
  movaps 0x3d0(B), %xmm9
  movaps 0x3e0(B), %xmm6
  movaps 0x3f0(B), %xmm11
  movaps 0x7c0(A), %xmm12
  movaps 0x7d0(A), %xmm15
  movaps 0x7e0(A), %xmm14
  mulps %xmm10, %xmm12
  mulps %xmm9, %xmm15
  addps %xmm12, %xmm2
  movaps 0x7f0(A), %xmm7
  mulps %xmm6, %xmm14
  addps %xmm15, %xmm2
  movaps 0x800(A), %xmm8
  mulps %xmm11, %xmm7
  addps %xmm14, %xmm2
  movaps 0x810(A), %xmm13
  mulps %xmm10, %xmm8
  addps %xmm7, %xmm2
  movaps 0x820(A), %xmm12
  mulps %xmm9, %xmm13
  addps %xmm8, %xmm3
  movaps 0x830(A), %xmm15
  mulps %xmm6, %xmm12
  addps %xmm13, %xmm3
  movaps 0x840(A), %xmm14
  mulps %xmm11, %xmm15
  addps %xmm12, %xmm3
  movaps 0x850(A), %xmm7
  mulps %xmm10, %xmm14
  addps %xmm15, %xmm3
  movaps 0x860(A), %xmm8
  mulps %xmm9, %xmm7
  addps %xmm14, %xmm4
  movaps 0x870(A), %xmm13
  mulps %xmm6, %xmm8
  addps %xmm7, %xmm4
  movaps 0x880(A), %xmm12
  mulps %xmm11, %xmm13
  addps %xmm8, %xmm4
  movaps 0x890(A), %xmm15
  mulps %xmm10, %xmm12
  addps %xmm13, %xmm4
  movaps 0x8a0(A), %xmm14
  mulps %xmm9, %xmm15
  addps %xmm12, %xmm5
  movaps 0x8b0(A), %xmm7
  mulps %xmm6, %xmm14
  addps %xmm15, %xmm5
  mulps %xmm11, %xmm7
  addps %xmm14, %xmm5
  addps %xmm7, %xmm5

  .align 16
jump_5:

  # Multiply C(1,1) by alpha.
  mulps alpha, %xmm2
  mulps alpha, %xmm3
  mulps alpha, %xmm4
  mulps alpha, %xmm5

  # Add accumulated C(1,1) to already existing.
  addps 0xc0(C), %xmm2
  addps 0xd0(C), %xmm3
  addps 0xe0(C), %xmm4
  addps 0xf0(C), %xmm5

  # Write out C(1,1) submatrix block.
  movaps %xmm2, 0xc0(C)
  movaps %xmm3, 0xd0(C)
  movaps %xmm4, 0xe0(C)
  movaps %xmm5, 0xf0(C)

  # Reset C(1,2) matrix block accumulators.
  xorps %xmm8, %xmm8
  xorps %xmm13, %xmm13
  xorps %xmm12, %xmm12
  xorps %xmm15, %xmm15

  .align 16
jump_6:

  # Check norm of product ||A(1,1)||*||B(1,2)||.
  movss 0x10(A), %xmm14
  mulss 0x14(B), %xmm14
  comiss tolerance, %xmm14
  jbe jump_7

  # Calculate C(1,2) += A(1,1)*B(1,2).
  movaps 0x100(B), %xmm7
  movaps 0x110(B), %xmm10
  movaps 0x120(B), %xmm9
  movaps 0x130(B), %xmm6
  movaps 0x4c0(A), %xmm11
  movaps 0x4d0(A), %xmm2
  movaps 0x4e0(A), %xmm3
  mulps %xmm7, %xmm11
  mulps %xmm10, %xmm2
  addps %xmm11, %xmm8
  movaps 0x4f0(A), %xmm4
  mulps %xmm9, %xmm3
  addps %xmm2, %xmm8
  movaps 0x500(A), %xmm5
  mulps %xmm6, %xmm4
  addps %xmm3, %xmm8
  movaps 0x510(A), %xmm14
  mulps %xmm7, %xmm5
  addps %xmm4, %xmm8
  movaps 0x520(A), %xmm11
  mulps %xmm10, %xmm14
  addps %xmm5, %xmm13
  movaps 0x530(A), %xmm2
  mulps %xmm9, %xmm11
  addps %xmm14, %xmm13
  movaps 0x540(A), %xmm3
  mulps %xmm6, %xmm2
  addps %xmm11, %xmm13
  movaps 0x550(A), %xmm4
  mulps %xmm7, %xmm3
  addps %xmm2, %xmm13
  movaps 0x560(A), %xmm5
  mulps %xmm10, %xmm4
  addps %xmm3, %xmm12
  movaps 0x570(A), %xmm14
  mulps %xmm9, %xmm5
  addps %xmm4, %xmm12
  movaps 0x580(A), %xmm11
  mulps %xmm6, %xmm14
  addps %xmm5, %xmm12
  movaps 0x590(A), %xmm2
  mulps %xmm7, %xmm11
  addps %xmm14, %xmm12
  movaps 0x5a0(A), %xmm3
  mulps %xmm10, %xmm2
  addps %xmm11, %xmm15
  movaps 0x5b0(A), %xmm4
  mulps %xmm9, %xmm3
  addps %xmm2, %xmm15
  mulps %xmm6, %xmm4
  addps %xmm3, %xmm15
  addps %xmm4, %xmm15

  .align 16
jump_7:

  # Check norm of product ||A(1,2)||*||B(2,2)||.
  movss 0x14(A), %xmm5
  mulss 0x24(B), %xmm5
  comiss tolerance, %xmm5
  jbe jump_8

  # Calculate C(1,2) += A(1,2)*B(2,2).
  movaps 0x200(B), %xmm14
  movaps 0x210(B), %xmm11
  movaps 0x220(B), %xmm2
  movaps 0x230(B), %xmm3
  movaps 0x5c0(A), %xmm4
  movaps 0x5d0(A), %xmm7
  movaps 0x5e0(A), %xmm10
  mulps %xmm14, %xmm4
  mulps %xmm11, %xmm7
  addps %xmm4, %xmm8
  movaps 0x5f0(A), %xmm9
  mulps %xmm2, %xmm10
  addps %xmm7, %xmm8
  movaps 0x600(A), %xmm6
  mulps %xmm3, %xmm9
  addps %xmm10, %xmm8
  movaps 0x610(A), %xmm5
  mulps %xmm14, %xmm6
  addps %xmm9, %xmm8
  movaps 0x620(A), %xmm4
  mulps %xmm11, %xmm5
  addps %xmm6, %xmm13
  movaps 0x630(A), %xmm7
  mulps %xmm2, %xmm4
  addps %xmm5, %xmm13
  movaps 0x640(A), %xmm10
  mulps %xmm3, %xmm7
  addps %xmm4, %xmm13
  movaps 0x650(A), %xmm9
  mulps %xmm14, %xmm10
  addps %xmm7, %xmm13
  movaps 0x660(A), %xmm6
  mulps %xmm11, %xmm9
  addps %xmm10, %xmm12
  movaps 0x670(A), %xmm5
  mulps %xmm2, %xmm6
  addps %xmm9, %xmm12
  movaps 0x680(A), %xmm4
  mulps %xmm3, %xmm5
  addps %xmm6, %xmm12
  movaps 0x690(A), %xmm7
  mulps %xmm14, %xmm4
  addps %xmm5, %xmm12
  movaps 0x6a0(A), %xmm10
  mulps %xmm11, %xmm7
  addps %xmm4, %xmm15
  movaps 0x6b0(A), %xmm9
  mulps %xmm2, %xmm10
  addps %xmm7, %xmm15
  mulps %xmm3, %xmm9
  addps %xmm10, %xmm15
  addps %xmm9, %xmm15

  .align 16
jump_8:

  # Check norm of product ||A(1,3)||*||B(3,2)||.
  movss 0x18(A), %xmm6
  mulss 0x34(B), %xmm6
  comiss tolerance, %xmm6
  jbe jump_9

  # Calculate C(1,2) += A(1,3)*B(3,2).
  movaps 0x300(B), %xmm5
  movaps 0x310(B), %xmm4
  movaps 0x320(B), %xmm7
  movaps 0x330(B), %xmm10
  movaps 0x6c0(A), %xmm9
  movaps 0x6d0(A), %xmm14
  movaps 0x6e0(A), %xmm11
  mulps %xmm5, %xmm9
  mulps %xmm4, %xmm14
  addps %xmm9, %xmm8
  movaps 0x6f0(A), %xmm2
  mulps %xmm7, %xmm11
  addps %xmm14, %xmm8
  movaps 0x700(A), %xmm3
  mulps %xmm10, %xmm2
  addps %xmm11, %xmm8
  movaps 0x710(A), %xmm6
  mulps %xmm5, %xmm3
  addps %xmm2, %xmm8
  movaps 0x720(A), %xmm9
  mulps %xmm4, %xmm6
  addps %xmm3, %xmm13
  movaps 0x730(A), %xmm14
  mulps %xmm7, %xmm9
  addps %xmm6, %xmm13
  movaps 0x740(A), %xmm11
  mulps %xmm10, %xmm14
  addps %xmm9, %xmm13
  movaps 0x750(A), %xmm2
  mulps %xmm5, %xmm11
  addps %xmm14, %xmm13
  movaps 0x760(A), %xmm3
  mulps %xmm4, %xmm2
  addps %xmm11, %xmm12
  movaps 0x770(A), %xmm6
  mulps %xmm7, %xmm3
  addps %xmm2, %xmm12
  movaps 0x780(A), %xmm9
  mulps %xmm10, %xmm6
  addps %xmm3, %xmm12
  movaps 0x790(A), %xmm14
  mulps %xmm5, %xmm9
  addps %xmm6, %xmm12
  movaps 0x7a0(A), %xmm11
  mulps %xmm4, %xmm14
  addps %xmm9, %xmm15
  movaps 0x7b0(A), %xmm2
  mulps %xmm7, %xmm11
  addps %xmm14, %xmm15
  mulps %xmm10, %xmm2
  addps %xmm11, %xmm15
  addps %xmm2, %xmm15

  .align 16
jump_9:

  # Check norm of product ||A(1,4)||*||B(4,2)||.
  movss 0x1c(A), %xmm3
  mulss 0x44(B), %xmm3
  comiss tolerance, %xmm3
  jbe jump_10

  # Calculate C(1,2) += A(1,4)*B(4,2).
  movaps 0x400(B), %xmm6
  movaps 0x410(B), %xmm9
  movaps 0x420(B), %xmm14
  movaps 0x430(B), %xmm11
  movaps 0x7c0(A), %xmm2
  movaps 0x7d0(A), %xmm5
  movaps 0x7e0(A), %xmm4
  mulps %xmm6, %xmm2
  mulps %xmm9, %xmm5
  addps %xmm2, %xmm8
  movaps 0x7f0(A), %xmm7
  mulps %xmm14, %xmm4
  addps %xmm5, %xmm8
  movaps 0x800(A), %xmm10
  mulps %xmm11, %xmm7
  addps %xmm4, %xmm8
  movaps 0x810(A), %xmm3
  mulps %xmm6, %xmm10
  addps %xmm7, %xmm8
  movaps 0x820(A), %xmm2
  mulps %xmm9, %xmm3
  addps %xmm10, %xmm13
  movaps 0x830(A), %xmm5
  mulps %xmm14, %xmm2
  addps %xmm3, %xmm13
  movaps 0x840(A), %xmm4
  mulps %xmm11, %xmm5
  addps %xmm2, %xmm13
  movaps 0x850(A), %xmm7
  mulps %xmm6, %xmm4
  addps %xmm5, %xmm13
  movaps 0x860(A), %xmm10
  mulps %xmm9, %xmm7
  addps %xmm4, %xmm12
  movaps 0x870(A), %xmm3
  mulps %xmm14, %xmm10
  addps %xmm7, %xmm12
  movaps 0x880(A), %xmm2
  mulps %xmm11, %xmm3
  addps %xmm10, %xmm12
  movaps 0x890(A), %xmm5
  mulps %xmm6, %xmm2
  addps %xmm3, %xmm12
  movaps 0x8a0(A), %xmm4
  mulps %xmm9, %xmm5
  addps %xmm2, %xmm15
  movaps 0x8b0(A), %xmm7
  mulps %xmm14, %xmm4
  addps %xmm5, %xmm15
  mulps %xmm11, %xmm7
  addps %xmm4, %xmm15
  addps %xmm7, %xmm15

  .align 16
jump_10:

  # Multiply C(1,2) by alpha.
  mulps alpha, %xmm8
  mulps alpha, %xmm13
  mulps alpha, %xmm12
  mulps alpha, %xmm15

  # Add accumulated C(1,2) to already existing.
  addps 0x100(C), %xmm8
  addps 0x110(C), %xmm13
  addps 0x120(C), %xmm12
  addps 0x130(C), %xmm15

  # Write out C(1,2) submatrix block.
  movaps %xmm8, 0x100(C)
  movaps %xmm13, 0x110(C)
  movaps %xmm12, 0x120(C)
  movaps %xmm15, 0x130(C)

  # Reset C(1,3) matrix block accumulators.
  xorps %xmm10, %xmm10
  xorps %xmm3, %xmm3
  xorps %xmm2, %xmm2
  xorps %xmm5, %xmm5

  .align 16
jump_11:

  # Check norm of product ||A(1,1)||*||B(1,3)||.
  movss 0x10(A), %xmm4
  mulss 0x18(B), %xmm4
  comiss tolerance, %xmm4
  jbe jump_12

  # Calculate C(1,3) += A(1,1)*B(1,3).
  movaps 0x140(B), %xmm7
  movaps 0x150(B), %xmm6
  movaps 0x160(B), %xmm9
  movaps 0x170(B), %xmm14
  movaps 0x4c0(A), %xmm11
  movaps 0x4d0(A), %xmm8
  movaps 0x4e0(A), %xmm13
  mulps %xmm7, %xmm11
  mulps %xmm6, %xmm8
  addps %xmm11, %xmm10
  movaps 0x4f0(A), %xmm12
  mulps %xmm9, %xmm13
  addps %xmm8, %xmm10
  movaps 0x500(A), %xmm15
  mulps %xmm14, %xmm12
  addps %xmm13, %xmm10
  movaps 0x510(A), %xmm4
  mulps %xmm7, %xmm15
  addps %xmm12, %xmm10
  movaps 0x520(A), %xmm11
  mulps %xmm6, %xmm4
  addps %xmm15, %xmm3
  movaps 0x530(A), %xmm8
  mulps %xmm9, %xmm11
  addps %xmm4, %xmm3
  movaps 0x540(A), %xmm13
  mulps %xmm14, %xmm8
  addps %xmm11, %xmm3
  movaps 0x550(A), %xmm12
  mulps %xmm7, %xmm13
  addps %xmm8, %xmm3
  movaps 0x560(A), %xmm15
  mulps %xmm6, %xmm12
  addps %xmm13, %xmm2
  movaps 0x570(A), %xmm4
  mulps %xmm9, %xmm15
  addps %xmm12, %xmm2
  movaps 0x580(A), %xmm11
  mulps %xmm14, %xmm4
  addps %xmm15, %xmm2
  movaps 0x590(A), %xmm8
  mulps %xmm7, %xmm11
  addps %xmm4, %xmm2
  movaps 0x5a0(A), %xmm13
  mulps %xmm6, %xmm8
  addps %xmm11, %xmm5
  movaps 0x5b0(A), %xmm12
  mulps %xmm9, %xmm13
  addps %xmm8, %xmm5
  mulps %xmm14, %xmm12
  addps %xmm13, %xmm5
  addps %xmm12, %xmm5

  .align 16
jump_12:

  # Check norm of product ||A(1,2)||*||B(2,3)||.
  movss 0x14(A), %xmm15
  mulss 0x28(B), %xmm15
  comiss tolerance, %xmm15
  jbe jump_13

  # Calculate C(1,3) += A(1,2)*B(2,3).
  movaps 0x240(B), %xmm4
  movaps 0x250(B), %xmm11
  movaps 0x260(B), %xmm8
  movaps 0x270(B), %xmm13
  movaps 0x5c0(A), %xmm12
  movaps 0x5d0(A), %xmm7
  movaps 0x5e0(A), %xmm6
  mulps %xmm4, %xmm12
  mulps %xmm11, %xmm7
  addps %xmm12, %xmm10
  movaps 0x5f0(A), %xmm9
  mulps %xmm8, %xmm6
  addps %xmm7, %xmm10
  movaps 0x600(A), %xmm14
  mulps %xmm13, %xmm9
  addps %xmm6, %xmm10
  movaps 0x610(A), %xmm15
  mulps %xmm4, %xmm14
  addps %xmm9, %xmm10
  movaps 0x620(A), %xmm12
  mulps %xmm11, %xmm15
  addps %xmm14, %xmm3
  movaps 0x630(A), %xmm7
  mulps %xmm8, %xmm12
  addps %xmm15, %xmm3
  movaps 0x640(A), %xmm6
  mulps %xmm13, %xmm7
  addps %xmm12, %xmm3
  movaps 0x650(A), %xmm9
  mulps %xmm4, %xmm6
  addps %xmm7, %xmm3
  movaps 0x660(A), %xmm14
  mulps %xmm11, %xmm9
  addps %xmm6, %xmm2
  movaps 0x670(A), %xmm15
  mulps %xmm8, %xmm14
  addps %xmm9, %xmm2
  movaps 0x680(A), %xmm12
  mulps %xmm13, %xmm15
  addps %xmm14, %xmm2
  movaps 0x690(A), %xmm7
  mulps %xmm4, %xmm12
  addps %xmm15, %xmm2
  movaps 0x6a0(A), %xmm6
  mulps %xmm11, %xmm7
  addps %xmm12, %xmm5
  movaps 0x6b0(A), %xmm9
  mulps %xmm8, %xmm6
  addps %xmm7, %xmm5
  mulps %xmm13, %xmm9
  addps %xmm6, %xmm5
  addps %xmm9, %xmm5

  .align 16
jump_13:

  # Check norm of product ||A(1,3)||*||B(3,3)||.
  movss 0x18(A), %xmm14
  mulss 0x38(B), %xmm14
  comiss tolerance, %xmm14
  jbe jump_14

  # Calculate C(1,3) += A(1,3)*B(3,3).
  movaps 0x340(B), %xmm15
  movaps 0x350(B), %xmm12
  movaps 0x360(B), %xmm7
  movaps 0x370(B), %xmm6
  movaps 0x6c0(A), %xmm9
  movaps 0x6d0(A), %xmm4
  movaps 0x6e0(A), %xmm11
  mulps %xmm15, %xmm9
  mulps %xmm12, %xmm4
  addps %xmm9, %xmm10
  movaps 0x6f0(A), %xmm8
  mulps %xmm7, %xmm11
  addps %xmm4, %xmm10
  movaps 0x700(A), %xmm13
  mulps %xmm6, %xmm8
  addps %xmm11, %xmm10
  movaps 0x710(A), %xmm14
  mulps %xmm15, %xmm13
  addps %xmm8, %xmm10
  movaps 0x720(A), %xmm9
  mulps %xmm12, %xmm14
  addps %xmm13, %xmm3
  movaps 0x730(A), %xmm4
  mulps %xmm7, %xmm9
  addps %xmm14, %xmm3
  movaps 0x740(A), %xmm11
  mulps %xmm6, %xmm4
  addps %xmm9, %xmm3
  movaps 0x750(A), %xmm8
  mulps %xmm15, %xmm11
  addps %xmm4, %xmm3
  movaps 0x760(A), %xmm13
  mulps %xmm12, %xmm8
  addps %xmm11, %xmm2
  movaps 0x770(A), %xmm14
  mulps %xmm7, %xmm13
  addps %xmm8, %xmm2
  movaps 0x780(A), %xmm9
  mulps %xmm6, %xmm14
  addps %xmm13, %xmm2
  movaps 0x790(A), %xmm4
  mulps %xmm15, %xmm9
  addps %xmm14, %xmm2
  movaps 0x7a0(A), %xmm11
  mulps %xmm12, %xmm4
  addps %xmm9, %xmm5
  movaps 0x7b0(A), %xmm8
  mulps %xmm7, %xmm11
  addps %xmm4, %xmm5
  mulps %xmm6, %xmm8
  addps %xmm11, %xmm5
  addps %xmm8, %xmm5

  .align 16
jump_14:

  # Check norm of product ||A(1,4)||*||B(4,3)||.
  movss 0x1c(A), %xmm13
  mulss 0x48(B), %xmm13
  comiss tolerance, %xmm13
  jbe jump_15

  # Calculate C(1,3) += A(1,4)*B(4,3).
  movaps 0x440(B), %xmm14
  movaps 0x450(B), %xmm9
  movaps 0x460(B), %xmm4
  movaps 0x470(B), %xmm11
  movaps 0x7c0(A), %xmm8
  movaps 0x7d0(A), %xmm15
  movaps 0x7e0(A), %xmm12
  mulps %xmm14, %xmm8
  mulps %xmm9, %xmm15
  addps %xmm8, %xmm10
  movaps 0x7f0(A), %xmm7
  mulps %xmm4, %xmm12
  addps %xmm15, %xmm10
  movaps 0x800(A), %xmm6
  mulps %xmm11, %xmm7
  addps %xmm12, %xmm10
  movaps 0x810(A), %xmm13
  mulps %xmm14, %xmm6
  addps %xmm7, %xmm10
  movaps 0x820(A), %xmm8
  mulps %xmm9, %xmm13
  addps %xmm6, %xmm3
  movaps 0x830(A), %xmm15
  mulps %xmm4, %xmm8
  addps %xmm13, %xmm3
  movaps 0x840(A), %xmm12
  mulps %xmm11, %xmm15
  addps %xmm8, %xmm3
  movaps 0x850(A), %xmm7
  mulps %xmm14, %xmm12
  addps %xmm15, %xmm3
  movaps 0x860(A), %xmm6
  mulps %xmm9, %xmm7
  addps %xmm12, %xmm2
  movaps 0x870(A), %xmm13
  mulps %xmm4, %xmm6
  addps %xmm7, %xmm2
  movaps 0x880(A), %xmm8
  mulps %xmm11, %xmm13
  addps %xmm6, %xmm2
  movaps 0x890(A), %xmm15
  mulps %xmm14, %xmm8
  addps %xmm13, %xmm2
  movaps 0x8a0(A), %xmm12
  mulps %xmm9, %xmm15
  addps %xmm8, %xmm5
  movaps 0x8b0(A), %xmm7
  mulps %xmm4, %xmm12
  addps %xmm15, %xmm5
  mulps %xmm11, %xmm7
  addps %xmm12, %xmm5
  addps %xmm7, %xmm5

  .align 16
jump_15:

  # Multiply C(1,3) by alpha.
  mulps alpha, %xmm10
  mulps alpha, %xmm3
  mulps alpha, %xmm2
  mulps alpha, %xmm5

  # Add accumulated C(1,3) to already existing.
  addps 0x140(C), %xmm10
  addps 0x150(C), %xmm3
  addps 0x160(C), %xmm2
  addps 0x170(C), %xmm5

  # Write out C(1,3) submatrix block.
  movaps %xmm10, 0x140(C)
  movaps %xmm3, 0x150(C)
  movaps %xmm2, 0x160(C)
  movaps %xmm5, 0x170(C)

  # Reset C(1,4) matrix block accumulators.
  xorps %xmm6, %xmm6
  xorps %xmm13, %xmm13
  xorps %xmm8, %xmm8
  xorps %xmm15, %xmm15

  .align 16
jump_16:

  # Check norm of product ||A(1,1)||*||B(1,4)||.
  movss 0x10(A), %xmm12
  mulss 0x1c(B), %xmm12
  comiss tolerance, %xmm12
  jbe jump_17

  # Calculate C(1,4) += A(1,1)*B(1,4).
  movaps 0x180(B), %xmm7
  movaps 0x190(B), %xmm14
  movaps 0x1a0(B), %xmm9
  movaps 0x1b0(B), %xmm4
  movaps 0x4c0(A), %xmm11
  movaps 0x4d0(A), %xmm10
  movaps 0x4e0(A), %xmm3
  mulps %xmm7, %xmm11
  mulps %xmm14, %xmm10
  addps %xmm11, %xmm6
  movaps 0x4f0(A), %xmm2
  mulps %xmm9, %xmm3
  addps %xmm10, %xmm6
  movaps 0x500(A), %xmm5
  mulps %xmm4, %xmm2
  addps %xmm3, %xmm6
  movaps 0x510(A), %xmm12
  mulps %xmm7, %xmm5
  addps %xmm2, %xmm6
  movaps 0x520(A), %xmm11
  mulps %xmm14, %xmm12
  addps %xmm5, %xmm13
  movaps 0x530(A), %xmm10
  mulps %xmm9, %xmm11
  addps %xmm12, %xmm13
  movaps 0x540(A), %xmm3
  mulps %xmm4, %xmm10
  addps %xmm11, %xmm13
  movaps 0x550(A), %xmm2
  mulps %xmm7, %xmm3
  addps %xmm10, %xmm13
  movaps 0x560(A), %xmm5
  mulps %xmm14, %xmm2
  addps %xmm3, %xmm8
  movaps 0x570(A), %xmm12
  mulps %xmm9, %xmm5
  addps %xmm2, %xmm8
  movaps 0x580(A), %xmm11
  mulps %xmm4, %xmm12
  addps %xmm5, %xmm8
  movaps 0x590(A), %xmm10
  mulps %xmm7, %xmm11
  addps %xmm12, %xmm8
  movaps 0x5a0(A), %xmm3
  mulps %xmm14, %xmm10
  addps %xmm11, %xmm15
  movaps 0x5b0(A), %xmm2
  mulps %xmm9, %xmm3
  addps %xmm10, %xmm15
  mulps %xmm4, %xmm2
  addps %xmm3, %xmm15
  addps %xmm2, %xmm15

  .align 16
jump_17:

  # Check norm of product ||A(1,2)||*||B(2,4)||.
  movss 0x14(A), %xmm5
  mulss 0x2c(B), %xmm5
  comiss tolerance, %xmm5
  jbe jump_18

  # Calculate C(1,4) += A(1,2)*B(2,4).
  movaps 0x280(B), %xmm12
  movaps 0x290(B), %xmm11
  movaps 0x2a0(B), %xmm10
  movaps 0x2b0(B), %xmm3
  movaps 0x5c0(A), %xmm2
  movaps 0x5d0(A), %xmm7
  movaps 0x5e0(A), %xmm14
  mulps %xmm12, %xmm2
  mulps %xmm11, %xmm7
  addps %xmm2, %xmm6
  movaps 0x5f0(A), %xmm9
  mulps %xmm10, %xmm14
  addps %xmm7, %xmm6
  movaps 0x600(A), %xmm4
  mulps %xmm3, %xmm9
  addps %xmm14, %xmm6
  movaps 0x610(A), %xmm5
  mulps %xmm12, %xmm4
  addps %xmm9, %xmm6
  movaps 0x620(A), %xmm2
  mulps %xmm11, %xmm5
  addps %xmm4, %xmm13
  movaps 0x630(A), %xmm7
  mulps %xmm10, %xmm2
  addps %xmm5, %xmm13
  movaps 0x640(A), %xmm14
  mulps %xmm3, %xmm7
  addps %xmm2, %xmm13
  movaps 0x650(A), %xmm9
  mulps %xmm12, %xmm14
  addps %xmm7, %xmm13
  movaps 0x660(A), %xmm4
  mulps %xmm11, %xmm9
  addps %xmm14, %xmm8
  movaps 0x670(A), %xmm5
  mulps %xmm10, %xmm4
  addps %xmm9, %xmm8
  movaps 0x680(A), %xmm2
  mulps %xmm3, %xmm5
  addps %xmm4, %xmm8
  movaps 0x690(A), %xmm7
  mulps %xmm12, %xmm2
  addps %xmm5, %xmm8
  movaps 0x6a0(A), %xmm14
  mulps %xmm11, %xmm7
  addps %xmm2, %xmm15
  movaps 0x6b0(A), %xmm9
  mulps %xmm10, %xmm14
  addps %xmm7, %xmm15
  mulps %xmm3, %xmm9
  addps %xmm14, %xmm15
  addps %xmm9, %xmm15

  .align 16
jump_18:

  # Check norm of product ||A(1,3)||*||B(3,4)||.
  movss 0x18(A), %xmm4
  mulss 0x3c(B), %xmm4
  comiss tolerance, %xmm4
  jbe jump_19

  # Calculate C(1,4) += A(1,3)*B(3,4).
  movaps 0x380(B), %xmm5
  movaps 0x390(B), %xmm2
  movaps 0x3a0(B), %xmm7
  movaps 0x3b0(B), %xmm14
  movaps 0x6c0(A), %xmm9
  movaps 0x6d0(A), %xmm12
  movaps 0x6e0(A), %xmm11
  mulps %xmm5, %xmm9
  mulps %xmm2, %xmm12
  addps %xmm9, %xmm6
  movaps 0x6f0(A), %xmm10
  mulps %xmm7, %xmm11
  addps %xmm12, %xmm6
  movaps 0x700(A), %xmm3
  mulps %xmm14, %xmm10
  addps %xmm11, %xmm6
  movaps 0x710(A), %xmm4
  mulps %xmm5, %xmm3
  addps %xmm10, %xmm6
  movaps 0x720(A), %xmm9
  mulps %xmm2, %xmm4
  addps %xmm3, %xmm13
  movaps 0x730(A), %xmm12
  mulps %xmm7, %xmm9
  addps %xmm4, %xmm13
  movaps 0x740(A), %xmm11
  mulps %xmm14, %xmm12
  addps %xmm9, %xmm13
  movaps 0x750(A), %xmm10
  mulps %xmm5, %xmm11
  addps %xmm12, %xmm13
  movaps 0x760(A), %xmm3
  mulps %xmm2, %xmm10
  addps %xmm11, %xmm8
  movaps 0x770(A), %xmm4
  mulps %xmm7, %xmm3
  addps %xmm10, %xmm8
  movaps 0x780(A), %xmm9
  mulps %xmm14, %xmm4
  addps %xmm3, %xmm8
  movaps 0x790(A), %xmm12
  mulps %xmm5, %xmm9
  addps %xmm4, %xmm8
  movaps 0x7a0(A), %xmm11
  mulps %xmm2, %xmm12
  addps %xmm9, %xmm15
  movaps 0x7b0(A), %xmm10
  mulps %xmm7, %xmm11
  addps %xmm12, %xmm15
  mulps %xmm14, %xmm10
  addps %xmm11, %xmm15
  addps %xmm10, %xmm15

  .align 16
jump_19:

  # Check norm of product ||A(1,4)||*||B(4,4)||.
  movss 0x1c(A), %xmm3
  mulss 0x4c(B), %xmm3
  comiss tolerance, %xmm3
  jbe jump_20

  # Calculate C(1,4) += A(1,4)*B(4,4).
  movaps 0x480(B), %xmm4
  movaps 0x490(B), %xmm9
  movaps 0x4a0(B), %xmm12
  movaps 0x4b0(B), %xmm11
  movaps 0x7c0(A), %xmm10
  movaps 0x7d0(A), %xmm5
  movaps 0x7e0(A), %xmm2
  mulps %xmm4, %xmm10
  mulps %xmm9, %xmm5
  addps %xmm10, %xmm6
  movaps 0x7f0(A), %xmm7
  mulps %xmm12, %xmm2
  addps %xmm5, %xmm6
  movaps 0x800(A), %xmm14
  mulps %xmm11, %xmm7
  addps %xmm2, %xmm6
  movaps 0x810(A), %xmm3
  mulps %xmm4, %xmm14
  addps %xmm7, %xmm6
  movaps 0x820(A), %xmm10
  mulps %xmm9, %xmm3
  addps %xmm14, %xmm13
  movaps 0x830(A), %xmm5
  mulps %xmm12, %xmm10
  addps %xmm3, %xmm13
  movaps 0x840(A), %xmm2
  mulps %xmm11, %xmm5
  addps %xmm10, %xmm13
  movaps 0x850(A), %xmm7
  mulps %xmm4, %xmm2
  addps %xmm5, %xmm13
  movaps 0x860(A), %xmm14
  mulps %xmm9, %xmm7
  addps %xmm2, %xmm8
  movaps 0x870(A), %xmm3
  mulps %xmm12, %xmm14
  addps %xmm7, %xmm8
  movaps 0x880(A), %xmm10
  mulps %xmm11, %xmm3
  addps %xmm14, %xmm8
  movaps 0x890(A), %xmm5
  mulps %xmm4, %xmm10
  addps %xmm3, %xmm8
  movaps 0x8a0(A), %xmm2
  mulps %xmm9, %xmm5
  addps %xmm10, %xmm15
  movaps 0x8b0(A), %xmm7
  mulps %xmm12, %xmm2
  addps %xmm5, %xmm15
  mulps %xmm11, %xmm7
  addps %xmm2, %xmm15
  addps %xmm7, %xmm15

  .align 16
jump_20:

  # Multiply C(1,4) by alpha.
  mulps alpha, %xmm6
  mulps alpha, %xmm13
  mulps alpha, %xmm8
  mulps alpha, %xmm15

  # Add accumulated C(1,4) to already existing.
  addps 0x180(C), %xmm6
  addps 0x190(C), %xmm13
  addps 0x1a0(C), %xmm8
  addps 0x1b0(C), %xmm15

  # Write out C(1,4) submatrix block.
  movaps %xmm6, 0x180(C)
  movaps %xmm13, 0x190(C)
  movaps %xmm8, 0x1a0(C)
  movaps %xmm15, 0x1b0(C)

  # Reset C(2,1) matrix block accumulators.
  xorps %xmm14, %xmm14
  xorps %xmm3, %xmm3
  xorps %xmm10, %xmm10
  xorps %xmm5, %xmm5

  .align 16
jump_21:

  # Check norm of product ||A(2,1)||*||B(1,1)||.
  movss 0x20(A), %xmm2
  mulss 0x10(B), %xmm2
  comiss tolerance, %xmm2
  jbe jump_22

  # Calculate C(2,1) += A(2,1)*B(1,1).
  movaps 0xc0(B), %xmm7
  movaps 0xd0(B), %xmm4
  movaps 0xe0(B), %xmm9
  movaps 0xf0(B), %xmm12
  movaps 0x8c0(A), %xmm11
  movaps 0x8d0(A), %xmm6
  movaps 0x8e0(A), %xmm13
  mulps %xmm7, %xmm11
  mulps %xmm4, %xmm6
  addps %xmm11, %xmm14
  movaps 0x8f0(A), %xmm8
  mulps %xmm9, %xmm13
  addps %xmm6, %xmm14
  movaps 0x900(A), %xmm15
  mulps %xmm12, %xmm8
  addps %xmm13, %xmm14
  movaps 0x910(A), %xmm2
  mulps %xmm7, %xmm15
  addps %xmm8, %xmm14
  movaps 0x920(A), %xmm11
  mulps %xmm4, %xmm2
  addps %xmm15, %xmm3
  movaps 0x930(A), %xmm6
  mulps %xmm9, %xmm11
  addps %xmm2, %xmm3
  movaps 0x940(A), %xmm13
  mulps %xmm12, %xmm6
  addps %xmm11, %xmm3
  movaps 0x950(A), %xmm8
  mulps %xmm7, %xmm13
  addps %xmm6, %xmm3
  movaps 0x960(A), %xmm15
  mulps %xmm4, %xmm8
  addps %xmm13, %xmm10
  movaps 0x970(A), %xmm2
  mulps %xmm9, %xmm15
  addps %xmm8, %xmm10
  movaps 0x980(A), %xmm11
  mulps %xmm12, %xmm2
  addps %xmm15, %xmm10
  movaps 0x990(A), %xmm6
  mulps %xmm7, %xmm11
  addps %xmm2, %xmm10
  movaps 0x9a0(A), %xmm13
  mulps %xmm4, %xmm6
  addps %xmm11, %xmm5
  movaps 0x9b0(A), %xmm8
  mulps %xmm9, %xmm13
  addps %xmm6, %xmm5
  mulps %xmm12, %xmm8
  addps %xmm13, %xmm5
  addps %xmm8, %xmm5

  .align 16
jump_22:

  # Check norm of product ||A(2,2)||*||B(2,1)||.
  movss 0x24(A), %xmm15
  mulss 0x20(B), %xmm15
  comiss tolerance, %xmm15
  jbe jump_23

  # Calculate C(2,1) += A(2,2)*B(2,1).
  movaps 0x1c0(B), %xmm2
  movaps 0x1d0(B), %xmm11
  movaps 0x1e0(B), %xmm6
  movaps 0x1f0(B), %xmm13
  movaps 0x9c0(A), %xmm8
  movaps 0x9d0(A), %xmm7
  movaps 0x9e0(A), %xmm4
  mulps %xmm2, %xmm8
  mulps %xmm11, %xmm7
  addps %xmm8, %xmm14
  movaps 0x9f0(A), %xmm9
  mulps %xmm6, %xmm4
  addps %xmm7, %xmm14
  movaps 0xa00(A), %xmm12
  mulps %xmm13, %xmm9
  addps %xmm4, %xmm14
  movaps 0xa10(A), %xmm15
  mulps %xmm2, %xmm12
  addps %xmm9, %xmm14
  movaps 0xa20(A), %xmm8
  mulps %xmm11, %xmm15
  addps %xmm12, %xmm3
  movaps 0xa30(A), %xmm7
  mulps %xmm6, %xmm8
  addps %xmm15, %xmm3
  movaps 0xa40(A), %xmm4
  mulps %xmm13, %xmm7
  addps %xmm8, %xmm3
  movaps 0xa50(A), %xmm9
  mulps %xmm2, %xmm4
  addps %xmm7, %xmm3
  movaps 0xa60(A), %xmm12
  mulps %xmm11, %xmm9
  addps %xmm4, %xmm10
  movaps 0xa70(A), %xmm15
  mulps %xmm6, %xmm12
  addps %xmm9, %xmm10
  movaps 0xa80(A), %xmm8
  mulps %xmm13, %xmm15
  addps %xmm12, %xmm10
  movaps 0xa90(A), %xmm7
  mulps %xmm2, %xmm8
  addps %xmm15, %xmm10
  movaps 0xaa0(A), %xmm4
  mulps %xmm11, %xmm7
  addps %xmm8, %xmm5
  movaps 0xab0(A), %xmm9
  mulps %xmm6, %xmm4
  addps %xmm7, %xmm5
  mulps %xmm13, %xmm9
  addps %xmm4, %xmm5
  addps %xmm9, %xmm5

  .align 16
jump_23:

  # Check norm of product ||A(2,3)||*||B(3,1)||.
  movss 0x28(A), %xmm12
  mulss 0x30(B), %xmm12
  comiss tolerance, %xmm12
  jbe jump_24

  # Calculate C(2,1) += A(2,3)*B(3,1).
  movaps 0x2c0(B), %xmm15
  movaps 0x2d0(B), %xmm8
  movaps 0x2e0(B), %xmm7
  movaps 0x2f0(B), %xmm4
  movaps 0xac0(A), %xmm9
  movaps 0xad0(A), %xmm2
  movaps 0xae0(A), %xmm11
  mulps %xmm15, %xmm9
  mulps %xmm8, %xmm2
  addps %xmm9, %xmm14
  movaps 0xaf0(A), %xmm6
  mulps %xmm7, %xmm11
  addps %xmm2, %xmm14
  movaps 0xb00(A), %xmm13
  mulps %xmm4, %xmm6
  addps %xmm11, %xmm14
  movaps 0xb10(A), %xmm12
  mulps %xmm15, %xmm13
  addps %xmm6, %xmm14
  movaps 0xb20(A), %xmm9
  mulps %xmm8, %xmm12
  addps %xmm13, %xmm3
  movaps 0xb30(A), %xmm2
  mulps %xmm7, %xmm9
  addps %xmm12, %xmm3
  movaps 0xb40(A), %xmm11
  mulps %xmm4, %xmm2
  addps %xmm9, %xmm3
  movaps 0xb50(A), %xmm6
  mulps %xmm15, %xmm11
  addps %xmm2, %xmm3
  movaps 0xb60(A), %xmm13
  mulps %xmm8, %xmm6
  addps %xmm11, %xmm10
  movaps 0xb70(A), %xmm12
  mulps %xmm7, %xmm13
  addps %xmm6, %xmm10
  movaps 0xb80(A), %xmm9
  mulps %xmm4, %xmm12
  addps %xmm13, %xmm10
  movaps 0xb90(A), %xmm2
  mulps %xmm15, %xmm9
  addps %xmm12, %xmm10
  movaps 0xba0(A), %xmm11
  mulps %xmm8, %xmm2
  addps %xmm9, %xmm5
  movaps 0xbb0(A), %xmm6
  mulps %xmm7, %xmm11
  addps %xmm2, %xmm5
  mulps %xmm4, %xmm6
  addps %xmm11, %xmm5
  addps %xmm6, %xmm5

  .align 16
jump_24:

  # Check norm of product ||A(2,4)||*||B(4,1)||.
  movss 0x2c(A), %xmm13
  mulss 0x40(B), %xmm13
  comiss tolerance, %xmm13
  jbe jump_25

  # Calculate C(2,1) += A(2,4)*B(4,1).
  movaps 0x3c0(B), %xmm12
  movaps 0x3d0(B), %xmm9
  movaps 0x3e0(B), %xmm2
  movaps 0x3f0(B), %xmm11
  movaps 0xbc0(A), %xmm6
  movaps 0xbd0(A), %xmm15
  movaps 0xbe0(A), %xmm8
  mulps %xmm12, %xmm6
  mulps %xmm9, %xmm15
  addps %xmm6, %xmm14
  movaps 0xbf0(A), %xmm7
  mulps %xmm2, %xmm8
  addps %xmm15, %xmm14
  movaps 0xc00(A), %xmm4
  mulps %xmm11, %xmm7
  addps %xmm8, %xmm14
  movaps 0xc10(A), %xmm13
  mulps %xmm12, %xmm4
  addps %xmm7, %xmm14
  movaps 0xc20(A), %xmm6
  mulps %xmm9, %xmm13
  addps %xmm4, %xmm3
  movaps 0xc30(A), %xmm15
  mulps %xmm2, %xmm6
  addps %xmm13, %xmm3
  movaps 0xc40(A), %xmm8
  mulps %xmm11, %xmm15
  addps %xmm6, %xmm3
  movaps 0xc50(A), %xmm7
  mulps %xmm12, %xmm8
  addps %xmm15, %xmm3
  movaps 0xc60(A), %xmm4
  mulps %xmm9, %xmm7
  addps %xmm8, %xmm10
  movaps 0xc70(A), %xmm13
  mulps %xmm2, %xmm4
  addps %xmm7, %xmm10
  movaps 0xc80(A), %xmm6
  mulps %xmm11, %xmm13
  addps %xmm4, %xmm10
  movaps 0xc90(A), %xmm15
  mulps %xmm12, %xmm6
  addps %xmm13, %xmm10
  movaps 0xca0(A), %xmm8
  mulps %xmm9, %xmm15
  addps %xmm6, %xmm5
  movaps 0xcb0(A), %xmm7
  mulps %xmm2, %xmm8
  addps %xmm15, %xmm5
  mulps %xmm11, %xmm7
  addps %xmm8, %xmm5
  addps %xmm7, %xmm5

  .align 16
jump_25:

  # Multiply C(2,1) by alpha.
  mulps alpha, %xmm14
  mulps alpha, %xmm3
  mulps alpha, %xmm10
  mulps alpha, %xmm5

  # Add accumulated C(2,1) to already existing.
  addps 0x1c0(C), %xmm14
  addps 0x1d0(C), %xmm3
  addps 0x1e0(C), %xmm10
  addps 0x1f0(C), %xmm5

  # Write out C(2,1) submatrix block.
  movaps %xmm14, 0x1c0(C)
  movaps %xmm3, 0x1d0(C)
  movaps %xmm10, 0x1e0(C)
  movaps %xmm5, 0x1f0(C)

  # Reset C(2,2) matrix block accumulators.
  xorps %xmm4, %xmm4
  xorps %xmm13, %xmm13
  xorps %xmm6, %xmm6
  xorps %xmm15, %xmm15

  .align 16
jump_26:

  # Check norm of product ||A(2,1)||*||B(1,2)||.
  movss 0x20(A), %xmm8
  mulss 0x14(B), %xmm8
  comiss tolerance, %xmm8
  jbe jump_27

  # Calculate C(2,2) += A(2,1)*B(1,2).
  movaps 0x100(B), %xmm7
  movaps 0x110(B), %xmm12
  movaps 0x120(B), %xmm9
  movaps 0x130(B), %xmm2
  movaps 0x8c0(A), %xmm11
  movaps 0x8d0(A), %xmm14
  movaps 0x8e0(A), %xmm3
  mulps %xmm7, %xmm11
  mulps %xmm12, %xmm14
  addps %xmm11, %xmm4
  movaps 0x8f0(A), %xmm10
  mulps %xmm9, %xmm3
  addps %xmm14, %xmm4
  movaps 0x900(A), %xmm5
  mulps %xmm2, %xmm10
  addps %xmm3, %xmm4
  movaps 0x910(A), %xmm8
  mulps %xmm7, %xmm5
  addps %xmm10, %xmm4
  movaps 0x920(A), %xmm11
  mulps %xmm12, %xmm8
  addps %xmm5, %xmm13
  movaps 0x930(A), %xmm14
  mulps %xmm9, %xmm11
  addps %xmm8, %xmm13
  movaps 0x940(A), %xmm3
  mulps %xmm2, %xmm14
  addps %xmm11, %xmm13
  movaps 0x950(A), %xmm10
  mulps %xmm7, %xmm3
  addps %xmm14, %xmm13
  movaps 0x960(A), %xmm5
  mulps %xmm12, %xmm10
  addps %xmm3, %xmm6
  movaps 0x970(A), %xmm8
  mulps %xmm9, %xmm5
  addps %xmm10, %xmm6
  movaps 0x980(A), %xmm11
  mulps %xmm2, %xmm8
  addps %xmm5, %xmm6
  movaps 0x990(A), %xmm14
  mulps %xmm7, %xmm11
  addps %xmm8, %xmm6
  movaps 0x9a0(A), %xmm3
  mulps %xmm12, %xmm14
  addps %xmm11, %xmm15
  movaps 0x9b0(A), %xmm10
  mulps %xmm9, %xmm3
  addps %xmm14, %xmm15
  mulps %xmm2, %xmm10
  addps %xmm3, %xmm15
  addps %xmm10, %xmm15

  .align 16
jump_27:

  # Check norm of product ||A(2,2)||*||B(2,2)||.
  movss 0x24(A), %xmm5
  mulss 0x24(B), %xmm5
  comiss tolerance, %xmm5
  jbe jump_28

  # Calculate C(2,2) += A(2,2)*B(2,2).
  movaps 0x200(B), %xmm8
  movaps 0x210(B), %xmm11
  movaps 0x220(B), %xmm14
  movaps 0x230(B), %xmm3
  movaps 0x9c0(A), %xmm10
  movaps 0x9d0(A), %xmm7
  movaps 0x9e0(A), %xmm12
  mulps %xmm8, %xmm10
  mulps %xmm11, %xmm7
  addps %xmm10, %xmm4
  movaps 0x9f0(A), %xmm9
  mulps %xmm14, %xmm12
  addps %xmm7, %xmm4
  movaps 0xa00(A), %xmm2
  mulps %xmm3, %xmm9
  addps %xmm12, %xmm4
  movaps 0xa10(A), %xmm5
  mulps %xmm8, %xmm2
  addps %xmm9, %xmm4
  movaps 0xa20(A), %xmm10
  mulps %xmm11, %xmm5
  addps %xmm2, %xmm13
  movaps 0xa30(A), %xmm7
  mulps %xmm14, %xmm10
  addps %xmm5, %xmm13
  movaps 0xa40(A), %xmm12
  mulps %xmm3, %xmm7
  addps %xmm10, %xmm13
  movaps 0xa50(A), %xmm9
  mulps %xmm8, %xmm12
  addps %xmm7, %xmm13
  movaps 0xa60(A), %xmm2
  mulps %xmm11, %xmm9
  addps %xmm12, %xmm6
  movaps 0xa70(A), %xmm5
  mulps %xmm14, %xmm2
  addps %xmm9, %xmm6
  movaps 0xa80(A), %xmm10
  mulps %xmm3, %xmm5
  addps %xmm2, %xmm6
  movaps 0xa90(A), %xmm7
  mulps %xmm8, %xmm10
  addps %xmm5, %xmm6
  movaps 0xaa0(A), %xmm12
  mulps %xmm11, %xmm7
  addps %xmm10, %xmm15
  movaps 0xab0(A), %xmm9
  mulps %xmm14, %xmm12
  addps %xmm7, %xmm15
  mulps %xmm3, %xmm9
  addps %xmm12, %xmm15
  addps %xmm9, %xmm15

  .align 16
jump_28:

  # Check norm of product ||A(2,3)||*||B(3,2)||.
  movss 0x28(A), %xmm2
  mulss 0x34(B), %xmm2
  comiss tolerance, %xmm2
  jbe jump_29

  # Calculate C(2,2) += A(2,3)*B(3,2).
  movaps 0x300(B), %xmm5
  movaps 0x310(B), %xmm10
  movaps 0x320(B), %xmm7
  movaps 0x330(B), %xmm12
  movaps 0xac0(A), %xmm9
  movaps 0xad0(A), %xmm8
  movaps 0xae0(A), %xmm11
  mulps %xmm5, %xmm9
  mulps %xmm10, %xmm8
  addps %xmm9, %xmm4
  movaps 0xaf0(A), %xmm14
  mulps %xmm7, %xmm11
  addps %xmm8, %xmm4
  movaps 0xb00(A), %xmm3
  mulps %xmm12, %xmm14
  addps %xmm11, %xmm4
  movaps 0xb10(A), %xmm2
  mulps %xmm5, %xmm3
  addps %xmm14, %xmm4
  movaps 0xb20(A), %xmm9
  mulps %xmm10, %xmm2
  addps %xmm3, %xmm13
  movaps 0xb30(A), %xmm8
  mulps %xmm7, %xmm9
  addps %xmm2, %xmm13
  movaps 0xb40(A), %xmm11
  mulps %xmm12, %xmm8
  addps %xmm9, %xmm13
  movaps 0xb50(A), %xmm14
  mulps %xmm5, %xmm11
  addps %xmm8, %xmm13
  movaps 0xb60(A), %xmm3
  mulps %xmm10, %xmm14
  addps %xmm11, %xmm6
  movaps 0xb70(A), %xmm2
  mulps %xmm7, %xmm3
  addps %xmm14, %xmm6
  movaps 0xb80(A), %xmm9
  mulps %xmm12, %xmm2
  addps %xmm3, %xmm6
  movaps 0xb90(A), %xmm8
  mulps %xmm5, %xmm9
  addps %xmm2, %xmm6
  movaps 0xba0(A), %xmm11
  mulps %xmm10, %xmm8
  addps %xmm9, %xmm15
  movaps 0xbb0(A), %xmm14
  mulps %xmm7, %xmm11
  addps %xmm8, %xmm15
  mulps %xmm12, %xmm14
  addps %xmm11, %xmm15
  addps %xmm14, %xmm15

  .align 16
jump_29:

  # Check norm of product ||A(2,4)||*||B(4,2)||.
  movss 0x2c(A), %xmm3
  mulss 0x44(B), %xmm3
  comiss tolerance, %xmm3
  jbe jump_30

  # Calculate C(2,2) += A(2,4)*B(4,2).
  movaps 0x400(B), %xmm2
  movaps 0x410(B), %xmm9
  movaps 0x420(B), %xmm8
  movaps 0x430(B), %xmm11
  movaps 0xbc0(A), %xmm14
  movaps 0xbd0(A), %xmm5
  movaps 0xbe0(A), %xmm10
  mulps %xmm2, %xmm14
  mulps %xmm9, %xmm5
  addps %xmm14, %xmm4
  movaps 0xbf0(A), %xmm7
  mulps %xmm8, %xmm10
  addps %xmm5, %xmm4
  movaps 0xc00(A), %xmm12
  mulps %xmm11, %xmm7
  addps %xmm10, %xmm4
  movaps 0xc10(A), %xmm3
  mulps %xmm2, %xmm12
  addps %xmm7, %xmm4
  movaps 0xc20(A), %xmm14
  mulps %xmm9, %xmm3
  addps %xmm12, %xmm13
  movaps 0xc30(A), %xmm5
  mulps %xmm8, %xmm14
  addps %xmm3, %xmm13
  movaps 0xc40(A), %xmm10
  mulps %xmm11, %xmm5
  addps %xmm14, %xmm13
  movaps 0xc50(A), %xmm7
  mulps %xmm2, %xmm10
  addps %xmm5, %xmm13
  movaps 0xc60(A), %xmm12
  mulps %xmm9, %xmm7
  addps %xmm10, %xmm6
  movaps 0xc70(A), %xmm3
  mulps %xmm8, %xmm12
  addps %xmm7, %xmm6
  movaps 0xc80(A), %xmm14
  mulps %xmm11, %xmm3
  addps %xmm12, %xmm6
  movaps 0xc90(A), %xmm5
  mulps %xmm2, %xmm14
  addps %xmm3, %xmm6
  movaps 0xca0(A), %xmm10
  mulps %xmm9, %xmm5
  addps %xmm14, %xmm15
  movaps 0xcb0(A), %xmm7
  mulps %xmm8, %xmm10
  addps %xmm5, %xmm15
  mulps %xmm11, %xmm7
  addps %xmm10, %xmm15
  addps %xmm7, %xmm15

  .align 16
jump_30:

  # Multiply C(2,2) by alpha.
  mulps alpha, %xmm4
  mulps alpha, %xmm13
  mulps alpha, %xmm6
  mulps alpha, %xmm15

  # Add accumulated C(2,2) to already existing.
  addps 0x200(C), %xmm4
  addps 0x210(C), %xmm13
  addps 0x220(C), %xmm6
  addps 0x230(C), %xmm15

  # Write out C(2,2) submatrix block.
  movaps %xmm4, 0x200(C)
  movaps %xmm13, 0x210(C)
  movaps %xmm6, 0x220(C)
  movaps %xmm15, 0x230(C)

  # Reset C(2,3) matrix block accumulators.
  xorps %xmm12, %xmm12
  xorps %xmm3, %xmm3
  xorps %xmm14, %xmm14
  xorps %xmm5, %xmm5

  .align 16
jump_31:

  # Check norm of product ||A(2,1)||*||B(1,3)||.
  movss 0x20(A), %xmm10
  mulss 0x18(B), %xmm10
  comiss tolerance, %xmm10
  jbe jump_32

  # Calculate C(2,3) += A(2,1)*B(1,3).
  movaps 0x140(B), %xmm7
  movaps 0x150(B), %xmm2
  movaps 0x160(B), %xmm9
  movaps 0x170(B), %xmm8
  movaps 0x8c0(A), %xmm11
  movaps 0x8d0(A), %xmm4
  movaps 0x8e0(A), %xmm13
  mulps %xmm7, %xmm11
  mulps %xmm2, %xmm4
  addps %xmm11, %xmm12
  movaps 0x8f0(A), %xmm6
  mulps %xmm9, %xmm13
  addps %xmm4, %xmm12
  movaps 0x900(A), %xmm15
  mulps %xmm8, %xmm6
  addps %xmm13, %xmm12
  movaps 0x910(A), %xmm10
  mulps %xmm7, %xmm15
  addps %xmm6, %xmm12
  movaps 0x920(A), %xmm11
  mulps %xmm2, %xmm10
  addps %xmm15, %xmm3
  movaps 0x930(A), %xmm4
  mulps %xmm9, %xmm11
  addps %xmm10, %xmm3
  movaps 0x940(A), %xmm13
  mulps %xmm8, %xmm4
  addps %xmm11, %xmm3
  movaps 0x950(A), %xmm6
  mulps %xmm7, %xmm13
  addps %xmm4, %xmm3
  movaps 0x960(A), %xmm15
  mulps %xmm2, %xmm6
  addps %xmm13, %xmm14
  movaps 0x970(A), %xmm10
  mulps %xmm9, %xmm15
  addps %xmm6, %xmm14
  movaps 0x980(A), %xmm11
  mulps %xmm8, %xmm10
  addps %xmm15, %xmm14
  movaps 0x990(A), %xmm4
  mulps %xmm7, %xmm11
  addps %xmm10, %xmm14
  movaps 0x9a0(A), %xmm13
  mulps %xmm2, %xmm4
  addps %xmm11, %xmm5
  movaps 0x9b0(A), %xmm6
  mulps %xmm9, %xmm13
  addps %xmm4, %xmm5
  mulps %xmm8, %xmm6
  addps %xmm13, %xmm5
  addps %xmm6, %xmm5

  .align 16
jump_32:

  # Check norm of product ||A(2,2)||*||B(2,3)||.
  movss 0x24(A), %xmm15
  mulss 0x28(B), %xmm15
  comiss tolerance, %xmm15
  jbe jump_33

  # Calculate C(2,3) += A(2,2)*B(2,3).
  movaps 0x240(B), %xmm10
  movaps 0x250(B), %xmm11
  movaps 0x260(B), %xmm4
  movaps 0x270(B), %xmm13
  movaps 0x9c0(A), %xmm6
  movaps 0x9d0(A), %xmm7
  movaps 0x9e0(A), %xmm2
  mulps %xmm10, %xmm6
  mulps %xmm11, %xmm7
  addps %xmm6, %xmm12
  movaps 0x9f0(A), %xmm9
  mulps %xmm4, %xmm2
  addps %xmm7, %xmm12
  movaps 0xa00(A), %xmm8
  mulps %xmm13, %xmm9
  addps %xmm2, %xmm12
  movaps 0xa10(A), %xmm15
  mulps %xmm10, %xmm8
  addps %xmm9, %xmm12
  movaps 0xa20(A), %xmm6
  mulps %xmm11, %xmm15
  addps %xmm8, %xmm3
  movaps 0xa30(A), %xmm7
  mulps %xmm4, %xmm6
  addps %xmm15, %xmm3
  movaps 0xa40(A), %xmm2
  mulps %xmm13, %xmm7
  addps %xmm6, %xmm3
  movaps 0xa50(A), %xmm9
  mulps %xmm10, %xmm2
  addps %xmm7, %xmm3
  movaps 0xa60(A), %xmm8
  mulps %xmm11, %xmm9
  addps %xmm2, %xmm14
  movaps 0xa70(A), %xmm15
  mulps %xmm4, %xmm8
  addps %xmm9, %xmm14
  movaps 0xa80(A), %xmm6
  mulps %xmm13, %xmm15
  addps %xmm8, %xmm14
  movaps 0xa90(A), %xmm7
  mulps %xmm10, %xmm6
  addps %xmm15, %xmm14
  movaps 0xaa0(A), %xmm2
  mulps %xmm11, %xmm7
  addps %xmm6, %xmm5
  movaps 0xab0(A), %xmm9
  mulps %xmm4, %xmm2
  addps %xmm7, %xmm5
  mulps %xmm13, %xmm9
  addps %xmm2, %xmm5
  addps %xmm9, %xmm5

  .align 16
jump_33:

  # Check norm of product ||A(2,3)||*||B(3,3)||.
  movss 0x28(A), %xmm8
  mulss 0x38(B), %xmm8
  comiss tolerance, %xmm8
  jbe jump_34

  # Calculate C(2,3) += A(2,3)*B(3,3).
  movaps 0x340(B), %xmm15
  movaps 0x350(B), %xmm6
  movaps 0x360(B), %xmm7
  movaps 0x370(B), %xmm2
  movaps 0xac0(A), %xmm9
  movaps 0xad0(A), %xmm10
  movaps 0xae0(A), %xmm11
  mulps %xmm15, %xmm9
  mulps %xmm6, %xmm10
  addps %xmm9, %xmm12
  movaps 0xaf0(A), %xmm4
  mulps %xmm7, %xmm11
  addps %xmm10, %xmm12
  movaps 0xb00(A), %xmm13
  mulps %xmm2, %xmm4
  addps %xmm11, %xmm12
  movaps 0xb10(A), %xmm8
  mulps %xmm15, %xmm13
  addps %xmm4, %xmm12
  movaps 0xb20(A), %xmm9
  mulps %xmm6, %xmm8
  addps %xmm13, %xmm3
  movaps 0xb30(A), %xmm10
  mulps %xmm7, %xmm9
  addps %xmm8, %xmm3
  movaps 0xb40(A), %xmm11
  mulps %xmm2, %xmm10
  addps %xmm9, %xmm3
  movaps 0xb50(A), %xmm4
  mulps %xmm15, %xmm11
  addps %xmm10, %xmm3
  movaps 0xb60(A), %xmm13
  mulps %xmm6, %xmm4
  addps %xmm11, %xmm14
  movaps 0xb70(A), %xmm8
  mulps %xmm7, %xmm13
  addps %xmm4, %xmm14
  movaps 0xb80(A), %xmm9
  mulps %xmm2, %xmm8
  addps %xmm13, %xmm14
  movaps 0xb90(A), %xmm10
  mulps %xmm15, %xmm9
  addps %xmm8, %xmm14
  movaps 0xba0(A), %xmm11
  mulps %xmm6, %xmm10
  addps %xmm9, %xmm5
  movaps 0xbb0(A), %xmm4
  mulps %xmm7, %xmm11
  addps %xmm10, %xmm5
  mulps %xmm2, %xmm4
  addps %xmm11, %xmm5
  addps %xmm4, %xmm5

  .align 16
jump_34:

  # Check norm of product ||A(2,4)||*||B(4,3)||.
  movss 0x2c(A), %xmm13
  mulss 0x48(B), %xmm13
  comiss tolerance, %xmm13
  jbe jump_35

  # Calculate C(2,3) += A(2,4)*B(4,3).
  movaps 0x440(B), %xmm8
  movaps 0x450(B), %xmm9
  movaps 0x460(B), %xmm10
  movaps 0x470(B), %xmm11
  movaps 0xbc0(A), %xmm4
  movaps 0xbd0(A), %xmm15
  movaps 0xbe0(A), %xmm6
  mulps %xmm8, %xmm4
  mulps %xmm9, %xmm15
  addps %xmm4, %xmm12
  movaps 0xbf0(A), %xmm7
  mulps %xmm10, %xmm6
  addps %xmm15, %xmm12
  movaps 0xc00(A), %xmm2
  mulps %xmm11, %xmm7
  addps %xmm6, %xmm12
  movaps 0xc10(A), %xmm13
  mulps %xmm8, %xmm2
  addps %xmm7, %xmm12
  movaps 0xc20(A), %xmm4
  mulps %xmm9, %xmm13
  addps %xmm2, %xmm3
  movaps 0xc30(A), %xmm15
  mulps %xmm10, %xmm4
  addps %xmm13, %xmm3
  movaps 0xc40(A), %xmm6
  mulps %xmm11, %xmm15
  addps %xmm4, %xmm3
  movaps 0xc50(A), %xmm7
  mulps %xmm8, %xmm6
  addps %xmm15, %xmm3
  movaps 0xc60(A), %xmm2
  mulps %xmm9, %xmm7
  addps %xmm6, %xmm14
  movaps 0xc70(A), %xmm13
  mulps %xmm10, %xmm2
  addps %xmm7, %xmm14
  movaps 0xc80(A), %xmm4
  mulps %xmm11, %xmm13
  addps %xmm2, %xmm14
  movaps 0xc90(A), %xmm15
  mulps %xmm8, %xmm4
  addps %xmm13, %xmm14
  movaps 0xca0(A), %xmm6
  mulps %xmm9, %xmm15
  addps %xmm4, %xmm5
  movaps 0xcb0(A), %xmm7
  mulps %xmm10, %xmm6
  addps %xmm15, %xmm5
  mulps %xmm11, %xmm7
  addps %xmm6, %xmm5
  addps %xmm7, %xmm5

  .align 16
jump_35:

  # Multiply C(2,3) by alpha.
  mulps alpha, %xmm12
  mulps alpha, %xmm3
  mulps alpha, %xmm14
  mulps alpha, %xmm5

  # Add accumulated C(2,3) to already existing.
  addps 0x240(C), %xmm12
  addps 0x250(C), %xmm3
  addps 0x260(C), %xmm14
  addps 0x270(C), %xmm5

  # Write out C(2,3) submatrix block.
  movaps %xmm12, 0x240(C)
  movaps %xmm3, 0x250(C)
  movaps %xmm14, 0x260(C)
  movaps %xmm5, 0x270(C)

  # Reset C(2,4) matrix block accumulators.
  xorps %xmm2, %xmm2
  xorps %xmm13, %xmm13
  xorps %xmm4, %xmm4
  xorps %xmm15, %xmm15

  .align 16
jump_36:

  # Check norm of product ||A(2,1)||*||B(1,4)||.
  movss 0x20(A), %xmm6
  mulss 0x1c(B), %xmm6
  comiss tolerance, %xmm6
  jbe jump_37

  # Calculate C(2,4) += A(2,1)*B(1,4).
  movaps 0x180(B), %xmm7
  movaps 0x190(B), %xmm8
  movaps 0x1a0(B), %xmm9
  movaps 0x1b0(B), %xmm10
  movaps 0x8c0(A), %xmm11
  movaps 0x8d0(A), %xmm12
  movaps 0x8e0(A), %xmm3
  mulps %xmm7, %xmm11
  mulps %xmm8, %xmm12
  addps %xmm11, %xmm2
  movaps 0x8f0(A), %xmm14
  mulps %xmm9, %xmm3
  addps %xmm12, %xmm2
  movaps 0x900(A), %xmm5
  mulps %xmm10, %xmm14
  addps %xmm3, %xmm2
  movaps 0x910(A), %xmm6
  mulps %xmm7, %xmm5
  addps %xmm14, %xmm2
  movaps 0x920(A), %xmm11
  mulps %xmm8, %xmm6
  addps %xmm5, %xmm13
  movaps 0x930(A), %xmm12
  mulps %xmm9, %xmm11
  addps %xmm6, %xmm13
  movaps 0x940(A), %xmm3
  mulps %xmm10, %xmm12
  addps %xmm11, %xmm13
  movaps 0x950(A), %xmm14
  mulps %xmm7, %xmm3
  addps %xmm12, %xmm13
  movaps 0x960(A), %xmm5
  mulps %xmm8, %xmm14
  addps %xmm3, %xmm4
  movaps 0x970(A), %xmm6
  mulps %xmm9, %xmm5
  addps %xmm14, %xmm4
  movaps 0x980(A), %xmm11
  mulps %xmm10, %xmm6
  addps %xmm5, %xmm4
  movaps 0x990(A), %xmm12
  mulps %xmm7, %xmm11
  addps %xmm6, %xmm4
  movaps 0x9a0(A), %xmm3
  mulps %xmm8, %xmm12
  addps %xmm11, %xmm15
  movaps 0x9b0(A), %xmm14
  mulps %xmm9, %xmm3
  addps %xmm12, %xmm15
  mulps %xmm10, %xmm14
  addps %xmm3, %xmm15
  addps %xmm14, %xmm15

  .align 16
jump_37:

  # Check norm of product ||A(2,2)||*||B(2,4)||.
  movss 0x24(A), %xmm5
  mulss 0x2c(B), %xmm5
  comiss tolerance, %xmm5
  jbe jump_38

  # Calculate C(2,4) += A(2,2)*B(2,4).
  movaps 0x280(B), %xmm6
  movaps 0x290(B), %xmm11
  movaps 0x2a0(B), %xmm12
  movaps 0x2b0(B), %xmm3
  movaps 0x9c0(A), %xmm14
  movaps 0x9d0(A), %xmm7
  movaps 0x9e0(A), %xmm8
  mulps %xmm6, %xmm14
  mulps %xmm11, %xmm7
  addps %xmm14, %xmm2
  movaps 0x9f0(A), %xmm9
  mulps %xmm12, %xmm8
  addps %xmm7, %xmm2
  movaps 0xa00(A), %xmm10
  mulps %xmm3, %xmm9
  addps %xmm8, %xmm2
  movaps 0xa10(A), %xmm5
  mulps %xmm6, %xmm10
  addps %xmm9, %xmm2
  movaps 0xa20(A), %xmm14
  mulps %xmm11, %xmm5
  addps %xmm10, %xmm13
  movaps 0xa30(A), %xmm7
  mulps %xmm12, %xmm14
  addps %xmm5, %xmm13
  movaps 0xa40(A), %xmm8
  mulps %xmm3, %xmm7
  addps %xmm14, %xmm13
  movaps 0xa50(A), %xmm9
  mulps %xmm6, %xmm8
  addps %xmm7, %xmm13
  movaps 0xa60(A), %xmm10
  mulps %xmm11, %xmm9
  addps %xmm8, %xmm4
  movaps 0xa70(A), %xmm5
  mulps %xmm12, %xmm10
  addps %xmm9, %xmm4
  movaps 0xa80(A), %xmm14
  mulps %xmm3, %xmm5
  addps %xmm10, %xmm4
  movaps 0xa90(A), %xmm7
  mulps %xmm6, %xmm14
  addps %xmm5, %xmm4
  movaps 0xaa0(A), %xmm8
  mulps %xmm11, %xmm7
  addps %xmm14, %xmm15
  movaps 0xab0(A), %xmm9
  mulps %xmm12, %xmm8
  addps %xmm7, %xmm15
  mulps %xmm3, %xmm9
  addps %xmm8, %xmm15
  addps %xmm9, %xmm15

  .align 16
jump_38:

  # Check norm of product ||A(2,3)||*||B(3,4)||.
  movss 0x28(A), %xmm10
  mulss 0x3c(B), %xmm10
  comiss tolerance, %xmm10
  jbe jump_39

  # Calculate C(2,4) += A(2,3)*B(3,4).
  movaps 0x380(B), %xmm5
  movaps 0x390(B), %xmm14
  movaps 0x3a0(B), %xmm7
  movaps 0x3b0(B), %xmm8
  movaps 0xac0(A), %xmm9
  movaps 0xad0(A), %xmm6
  movaps 0xae0(A), %xmm11
  mulps %xmm5, %xmm9
  mulps %xmm14, %xmm6
  addps %xmm9, %xmm2
  movaps 0xaf0(A), %xmm12
  mulps %xmm7, %xmm11
  addps %xmm6, %xmm2
  movaps 0xb00(A), %xmm3
  mulps %xmm8, %xmm12
  addps %xmm11, %xmm2
  movaps 0xb10(A), %xmm10
  mulps %xmm5, %xmm3
  addps %xmm12, %xmm2
  movaps 0xb20(A), %xmm9
  mulps %xmm14, %xmm10
  addps %xmm3, %xmm13
  movaps 0xb30(A), %xmm6
  mulps %xmm7, %xmm9
  addps %xmm10, %xmm13
  movaps 0xb40(A), %xmm11
  mulps %xmm8, %xmm6
  addps %xmm9, %xmm13
  movaps 0xb50(A), %xmm12
  mulps %xmm5, %xmm11
  addps %xmm6, %xmm13
  movaps 0xb60(A), %xmm3
  mulps %xmm14, %xmm12
  addps %xmm11, %xmm4
  movaps 0xb70(A), %xmm10
  mulps %xmm7, %xmm3
  addps %xmm12, %xmm4
  movaps 0xb80(A), %xmm9
  mulps %xmm8, %xmm10
  addps %xmm3, %xmm4
  movaps 0xb90(A), %xmm6
  mulps %xmm5, %xmm9
  addps %xmm10, %xmm4
  movaps 0xba0(A), %xmm11
  mulps %xmm14, %xmm6
  addps %xmm9, %xmm15
  movaps 0xbb0(A), %xmm12
  mulps %xmm7, %xmm11
  addps %xmm6, %xmm15
  mulps %xmm8, %xmm12
  addps %xmm11, %xmm15
  addps %xmm12, %xmm15

  .align 16
jump_39:

  # Check norm of product ||A(2,4)||*||B(4,4)||.
  movss 0x2c(A), %xmm3
  mulss 0x4c(B), %xmm3
  comiss tolerance, %xmm3
  jbe jump_40

  # Calculate C(2,4) += A(2,4)*B(4,4).
  movaps 0x480(B), %xmm10
  movaps 0x490(B), %xmm9
  movaps 0x4a0(B), %xmm6
  movaps 0x4b0(B), %xmm11
  movaps 0xbc0(A), %xmm12
  movaps 0xbd0(A), %xmm5
  movaps 0xbe0(A), %xmm14
  mulps %xmm10, %xmm12
  mulps %xmm9, %xmm5
  addps %xmm12, %xmm2
  movaps 0xbf0(A), %xmm7
  mulps %xmm6, %xmm14
  addps %xmm5, %xmm2
  movaps 0xc00(A), %xmm8
  mulps %xmm11, %xmm7
  addps %xmm14, %xmm2
  movaps 0xc10(A), %xmm3
  mulps %xmm10, %xmm8
  addps %xmm7, %xmm2
  movaps 0xc20(A), %xmm12
  mulps %xmm9, %xmm3
  addps %xmm8, %xmm13
  movaps 0xc30(A), %xmm5
  mulps %xmm6, %xmm12
  addps %xmm3, %xmm13
  movaps 0xc40(A), %xmm14
  mulps %xmm11, %xmm5
  addps %xmm12, %xmm13
  movaps 0xc50(A), %xmm7
  mulps %xmm10, %xmm14
  addps %xmm5, %xmm13
  movaps 0xc60(A), %xmm8
  mulps %xmm9, %xmm7
  addps %xmm14, %xmm4
  movaps 0xc70(A), %xmm3
  mulps %xmm6, %xmm8
  addps %xmm7, %xmm4
  movaps 0xc80(A), %xmm12
  mulps %xmm11, %xmm3
  addps %xmm8, %xmm4
  movaps 0xc90(A), %xmm5
  mulps %xmm10, %xmm12
  addps %xmm3, %xmm4
  movaps 0xca0(A), %xmm14
  mulps %xmm9, %xmm5
  addps %xmm12, %xmm15
  movaps 0xcb0(A), %xmm7
  mulps %xmm6, %xmm14
  addps %xmm5, %xmm15
  mulps %xmm11, %xmm7
  addps %xmm14, %xmm15
  addps %xmm7, %xmm15

  .align 16
jump_40:

  # Multiply C(2,4) by alpha.
  mulps alpha, %xmm2
  mulps alpha, %xmm13
  mulps alpha, %xmm4
  mulps alpha, %xmm15

  # Add accumulated C(2,4) to already existing.
  addps 0x280(C), %xmm2
  addps 0x290(C), %xmm13
  addps 0x2a0(C), %xmm4
  addps 0x2b0(C), %xmm15

  # Write out C(2,4) submatrix block.
  movaps %xmm2, 0x280(C)
  movaps %xmm13, 0x290(C)
  movaps %xmm4, 0x2a0(C)
  movaps %xmm15, 0x2b0(C)

  # Reset C(3,1) matrix block accumulators.
  xorps %xmm8, %xmm8
  xorps %xmm3, %xmm3
  xorps %xmm12, %xmm12
  xorps %xmm5, %xmm5

  .align 16
jump_41:

  # Check norm of product ||A(3,1)||*||B(1,1)||.
  movss 0x30(A), %xmm14
  mulss 0x10(B), %xmm14
  comiss tolerance, %xmm14
  jbe jump_42

  # Calculate C(3,1) += A(3,1)*B(1,1).
  movaps 0xc0(B), %xmm7
  movaps 0xd0(B), %xmm10
  movaps 0xe0(B), %xmm9
  movaps 0xf0(B), %xmm6
  movaps 0xcc0(A), %xmm11
  movaps 0xcd0(A), %xmm2
  movaps 0xce0(A), %xmm13
  mulps %xmm7, %xmm11
  mulps %xmm10, %xmm2
  addps %xmm11, %xmm8
  movaps 0xcf0(A), %xmm4
  mulps %xmm9, %xmm13
  addps %xmm2, %xmm8
  movaps 0xd00(A), %xmm15
  mulps %xmm6, %xmm4
  addps %xmm13, %xmm8
  movaps 0xd10(A), %xmm14
  mulps %xmm7, %xmm15
  addps %xmm4, %xmm8
  movaps 0xd20(A), %xmm11
  mulps %xmm10, %xmm14
  addps %xmm15, %xmm3
  movaps 0xd30(A), %xmm2
  mulps %xmm9, %xmm11
  addps %xmm14, %xmm3
  movaps 0xd40(A), %xmm13
  mulps %xmm6, %xmm2
  addps %xmm11, %xmm3
  movaps 0xd50(A), %xmm4
  mulps %xmm7, %xmm13
  addps %xmm2, %xmm3
  movaps 0xd60(A), %xmm15
  mulps %xmm10, %xmm4
  addps %xmm13, %xmm12
  movaps 0xd70(A), %xmm14
  mulps %xmm9, %xmm15
  addps %xmm4, %xmm12
  movaps 0xd80(A), %xmm11
  mulps %xmm6, %xmm14
  addps %xmm15, %xmm12
  movaps 0xd90(A), %xmm2
  mulps %xmm7, %xmm11
  addps %xmm14, %xmm12
  movaps 0xda0(A), %xmm13
  mulps %xmm10, %xmm2
  addps %xmm11, %xmm5
  movaps 0xdb0(A), %xmm4
  mulps %xmm9, %xmm13
  addps %xmm2, %xmm5
  mulps %xmm6, %xmm4
  addps %xmm13, %xmm5
  addps %xmm4, %xmm5

  .align 16
jump_42:

  # Check norm of product ||A(3,2)||*||B(2,1)||.
  movss 0x34(A), %xmm15
  mulss 0x20(B), %xmm15
  comiss tolerance, %xmm15
  jbe jump_43

  # Calculate C(3,1) += A(3,2)*B(2,1).
  movaps 0x1c0(B), %xmm14
  movaps 0x1d0(B), %xmm11
  movaps 0x1e0(B), %xmm2
  movaps 0x1f0(B), %xmm13
  movaps 0xdc0(A), %xmm4
  movaps 0xdd0(A), %xmm7
  movaps 0xde0(A), %xmm10
  mulps %xmm14, %xmm4
  mulps %xmm11, %xmm7
  addps %xmm4, %xmm8
  movaps 0xdf0(A), %xmm9
  mulps %xmm2, %xmm10
  addps %xmm7, %xmm8
  movaps 0xe00(A), %xmm6
  mulps %xmm13, %xmm9
  addps %xmm10, %xmm8
  movaps 0xe10(A), %xmm15
  mulps %xmm14, %xmm6
  addps %xmm9, %xmm8
  movaps 0xe20(A), %xmm4
  mulps %xmm11, %xmm15
  addps %xmm6, %xmm3
  movaps 0xe30(A), %xmm7
  mulps %xmm2, %xmm4
  addps %xmm15, %xmm3
  movaps 0xe40(A), %xmm10
  mulps %xmm13, %xmm7
  addps %xmm4, %xmm3
  movaps 0xe50(A), %xmm9
  mulps %xmm14, %xmm10
  addps %xmm7, %xmm3
  movaps 0xe60(A), %xmm6
  mulps %xmm11, %xmm9
  addps %xmm10, %xmm12
  movaps 0xe70(A), %xmm15
  mulps %xmm2, %xmm6
  addps %xmm9, %xmm12
  movaps 0xe80(A), %xmm4
  mulps %xmm13, %xmm15
  addps %xmm6, %xmm12
  movaps 0xe90(A), %xmm7
  mulps %xmm14, %xmm4
  addps %xmm15, %xmm12
  movaps 0xea0(A), %xmm10
  mulps %xmm11, %xmm7
  addps %xmm4, %xmm5
  movaps 0xeb0(A), %xmm9
  mulps %xmm2, %xmm10
  addps %xmm7, %xmm5
  mulps %xmm13, %xmm9
  addps %xmm10, %xmm5
  addps %xmm9, %xmm5

  .align 16
jump_43:

  # Check norm of product ||A(3,3)||*||B(3,1)||.
  movss 0x38(A), %xmm6
  mulss 0x30(B), %xmm6
  comiss tolerance, %xmm6
  jbe jump_44

  # Calculate C(3,1) += A(3,3)*B(3,1).
  movaps 0x2c0(B), %xmm15
  movaps 0x2d0(B), %xmm4
  movaps 0x2e0(B), %xmm7
  movaps 0x2f0(B), %xmm10
  movaps 0xec0(A), %xmm9
  movaps 0xed0(A), %xmm14
  movaps 0xee0(A), %xmm11
  mulps %xmm15, %xmm9
  mulps %xmm4, %xmm14
  addps %xmm9, %xmm8
  movaps 0xef0(A), %xmm2
  mulps %xmm7, %xmm11
  addps %xmm14, %xmm8
  movaps 0xf00(A), %xmm13
  mulps %xmm10, %xmm2
  addps %xmm11, %xmm8
  movaps 0xf10(A), %xmm6
  mulps %xmm15, %xmm13
  addps %xmm2, %xmm8
  movaps 0xf20(A), %xmm9
  mulps %xmm4, %xmm6
  addps %xmm13, %xmm3
  movaps 0xf30(A), %xmm14
  mulps %xmm7, %xmm9
  addps %xmm6, %xmm3
  movaps 0xf40(A), %xmm11
  mulps %xmm10, %xmm14
  addps %xmm9, %xmm3
  movaps 0xf50(A), %xmm2
  mulps %xmm15, %xmm11
  addps %xmm14, %xmm3
  movaps 0xf60(A), %xmm13
  mulps %xmm4, %xmm2
  addps %xmm11, %xmm12
  movaps 0xf70(A), %xmm6
  mulps %xmm7, %xmm13
  addps %xmm2, %xmm12
  movaps 0xf80(A), %xmm9
  mulps %xmm10, %xmm6
  addps %xmm13, %xmm12
  movaps 0xf90(A), %xmm14
  mulps %xmm15, %xmm9
  addps %xmm6, %xmm12
  movaps 0xfa0(A), %xmm11
  mulps %xmm4, %xmm14
  addps %xmm9, %xmm5
  movaps 0xfb0(A), %xmm2
  mulps %xmm7, %xmm11
  addps %xmm14, %xmm5
  mulps %xmm10, %xmm2
  addps %xmm11, %xmm5
  addps %xmm2, %xmm5

  .align 16
jump_44:

  # Check norm of product ||A(3,4)||*||B(4,1)||.
  movss 0x3c(A), %xmm13
  mulss 0x40(B), %xmm13
  comiss tolerance, %xmm13
  jbe jump_45

  # Calculate C(3,1) += A(3,4)*B(4,1).
  movaps 0x3c0(B), %xmm6
  movaps 0x3d0(B), %xmm9
  movaps 0x3e0(B), %xmm14
  movaps 0x3f0(B), %xmm11
  movaps 0xfc0(A), %xmm2
  movaps 0xfd0(A), %xmm15
  movaps 0xfe0(A), %xmm4
  mulps %xmm6, %xmm2
  mulps %xmm9, %xmm15
  addps %xmm2, %xmm8
  movaps 0xff0(A), %xmm7
  mulps %xmm14, %xmm4
  addps %xmm15, %xmm8
  movaps 0x1000(A), %xmm10
  mulps %xmm11, %xmm7
  addps %xmm4, %xmm8
  movaps 0x1010(A), %xmm13
  mulps %xmm6, %xmm10
  addps %xmm7, %xmm8
  movaps 0x1020(A), %xmm2
  mulps %xmm9, %xmm13
  addps %xmm10, %xmm3
  movaps 0x1030(A), %xmm15
  mulps %xmm14, %xmm2
  addps %xmm13, %xmm3
  movaps 0x1040(A), %xmm4
  mulps %xmm11, %xmm15
  addps %xmm2, %xmm3
  movaps 0x1050(A), %xmm7
  mulps %xmm6, %xmm4
  addps %xmm15, %xmm3
  movaps 0x1060(A), %xmm10
  mulps %xmm9, %xmm7
  addps %xmm4, %xmm12
  movaps 0x1070(A), %xmm13
  mulps %xmm14, %xmm10
  addps %xmm7, %xmm12
  movaps 0x1080(A), %xmm2
  mulps %xmm11, %xmm13
  addps %xmm10, %xmm12
  movaps 0x1090(A), %xmm15
  mulps %xmm6, %xmm2
  addps %xmm13, %xmm12
  movaps 0x10a0(A), %xmm4
  mulps %xmm9, %xmm15
  addps %xmm2, %xmm5
  movaps 0x10b0(A), %xmm7
  mulps %xmm14, %xmm4
  addps %xmm15, %xmm5
  mulps %xmm11, %xmm7
  addps %xmm4, %xmm5
  addps %xmm7, %xmm5

  .align 16
jump_45:

  # Multiply C(3,1) by alpha.
  mulps alpha, %xmm8
  mulps alpha, %xmm3
  mulps alpha, %xmm12
  mulps alpha, %xmm5

  # Add accumulated C(3,1) to already existing.
  addps 0x2c0(C), %xmm8
  addps 0x2d0(C), %xmm3
  addps 0x2e0(C), %xmm12
  addps 0x2f0(C), %xmm5

  # Write out C(3,1) submatrix block.
  movaps %xmm8, 0x2c0(C)
  movaps %xmm3, 0x2d0(C)
  movaps %xmm12, 0x2e0(C)
  movaps %xmm5, 0x2f0(C)

  # Reset C(3,2) matrix block accumulators.
  xorps %xmm10, %xmm10
  xorps %xmm13, %xmm13
  xorps %xmm2, %xmm2
  xorps %xmm15, %xmm15

  .align 16
jump_46:

  # Check norm of product ||A(3,1)||*||B(1,2)||.
  movss 0x30(A), %xmm4
  mulss 0x14(B), %xmm4
  comiss tolerance, %xmm4
  jbe jump_47

  # Calculate C(3,2) += A(3,1)*B(1,2).
  movaps 0x100(B), %xmm7
  movaps 0x110(B), %xmm6
  movaps 0x120(B), %xmm9
  movaps 0x130(B), %xmm14
  movaps 0xcc0(A), %xmm11
  movaps 0xcd0(A), %xmm8
  movaps 0xce0(A), %xmm3
  mulps %xmm7, %xmm11
  mulps %xmm6, %xmm8
  addps %xmm11, %xmm10
  movaps 0xcf0(A), %xmm12
  mulps %xmm9, %xmm3
  addps %xmm8, %xmm10
  movaps 0xd00(A), %xmm5
  mulps %xmm14, %xmm12
  addps %xmm3, %xmm10
  movaps 0xd10(A), %xmm4
  mulps %xmm7, %xmm5
  addps %xmm12, %xmm10
  movaps 0xd20(A), %xmm11
  mulps %xmm6, %xmm4
  addps %xmm5, %xmm13
  movaps 0xd30(A), %xmm8
  mulps %xmm9, %xmm11
  addps %xmm4, %xmm13
  movaps 0xd40(A), %xmm3
  mulps %xmm14, %xmm8
  addps %xmm11, %xmm13
  movaps 0xd50(A), %xmm12
  mulps %xmm7, %xmm3
  addps %xmm8, %xmm13
  movaps 0xd60(A), %xmm5
  mulps %xmm6, %xmm12
  addps %xmm3, %xmm2
  movaps 0xd70(A), %xmm4
  mulps %xmm9, %xmm5
  addps %xmm12, %xmm2
  movaps 0xd80(A), %xmm11
  mulps %xmm14, %xmm4
  addps %xmm5, %xmm2
  movaps 0xd90(A), %xmm8
  mulps %xmm7, %xmm11
  addps %xmm4, %xmm2
  movaps 0xda0(A), %xmm3
  mulps %xmm6, %xmm8
  addps %xmm11, %xmm15
  movaps 0xdb0(A), %xmm12
  mulps %xmm9, %xmm3
  addps %xmm8, %xmm15
  mulps %xmm14, %xmm12
  addps %xmm3, %xmm15
  addps %xmm12, %xmm15

  .align 16
jump_47:

  # Check norm of product ||A(3,2)||*||B(2,2)||.
  movss 0x34(A), %xmm5
  mulss 0x24(B), %xmm5
  comiss tolerance, %xmm5
  jbe jump_48

  # Calculate C(3,2) += A(3,2)*B(2,2).
  movaps 0x200(B), %xmm4
  movaps 0x210(B), %xmm11
  movaps 0x220(B), %xmm8
  movaps 0x230(B), %xmm3
  movaps 0xdc0(A), %xmm12
  movaps 0xdd0(A), %xmm7
  movaps 0xde0(A), %xmm6
  mulps %xmm4, %xmm12
  mulps %xmm11, %xmm7
  addps %xmm12, %xmm10
  movaps 0xdf0(A), %xmm9
  mulps %xmm8, %xmm6
  addps %xmm7, %xmm10
  movaps 0xe00(A), %xmm14
  mulps %xmm3, %xmm9
  addps %xmm6, %xmm10
  movaps 0xe10(A), %xmm5
  mulps %xmm4, %xmm14
  addps %xmm9, %xmm10
  movaps 0xe20(A), %xmm12
  mulps %xmm11, %xmm5
  addps %xmm14, %xmm13
  movaps 0xe30(A), %xmm7
  mulps %xmm8, %xmm12
  addps %xmm5, %xmm13
  movaps 0xe40(A), %xmm6
  mulps %xmm3, %xmm7
  addps %xmm12, %xmm13
  movaps 0xe50(A), %xmm9
  mulps %xmm4, %xmm6
  addps %xmm7, %xmm13
  movaps 0xe60(A), %xmm14
  mulps %xmm11, %xmm9
  addps %xmm6, %xmm2
  movaps 0xe70(A), %xmm5
  mulps %xmm8, %xmm14
  addps %xmm9, %xmm2
  movaps 0xe80(A), %xmm12
  mulps %xmm3, %xmm5
  addps %xmm14, %xmm2
  movaps 0xe90(A), %xmm7
  mulps %xmm4, %xmm12
  addps %xmm5, %xmm2
  movaps 0xea0(A), %xmm6
  mulps %xmm11, %xmm7
  addps %xmm12, %xmm15
  movaps 0xeb0(A), %xmm9
  mulps %xmm8, %xmm6
  addps %xmm7, %xmm15
  mulps %xmm3, %xmm9
  addps %xmm6, %xmm15
  addps %xmm9, %xmm15

  .align 16
jump_48:

  # Check norm of product ||A(3,3)||*||B(3,2)||.
  movss 0x38(A), %xmm14
  mulss 0x34(B), %xmm14
  comiss tolerance, %xmm14
  jbe jump_49

  # Calculate C(3,2) += A(3,3)*B(3,2).
  movaps 0x300(B), %xmm5
  movaps 0x310(B), %xmm12
  movaps 0x320(B), %xmm7
  movaps 0x330(B), %xmm6
  movaps 0xec0(A), %xmm9
  movaps 0xed0(A), %xmm4
  movaps 0xee0(A), %xmm11
  mulps %xmm5, %xmm9
  mulps %xmm12, %xmm4
  addps %xmm9, %xmm10
  movaps 0xef0(A), %xmm8
  mulps %xmm7, %xmm11
  addps %xmm4, %xmm10
  movaps 0xf00(A), %xmm3
  mulps %xmm6, %xmm8
  addps %xmm11, %xmm10
  movaps 0xf10(A), %xmm14
  mulps %xmm5, %xmm3
  addps %xmm8, %xmm10
  movaps 0xf20(A), %xmm9
  mulps %xmm12, %xmm14
  addps %xmm3, %xmm13
  movaps 0xf30(A), %xmm4
  mulps %xmm7, %xmm9
  addps %xmm14, %xmm13
  movaps 0xf40(A), %xmm11
  mulps %xmm6, %xmm4
  addps %xmm9, %xmm13
  movaps 0xf50(A), %xmm8
  mulps %xmm5, %xmm11
  addps %xmm4, %xmm13
  movaps 0xf60(A), %xmm3
  mulps %xmm12, %xmm8
  addps %xmm11, %xmm2
  movaps 0xf70(A), %xmm14
  mulps %xmm7, %xmm3
  addps %xmm8, %xmm2
  movaps 0xf80(A), %xmm9
  mulps %xmm6, %xmm14
  addps %xmm3, %xmm2
  movaps 0xf90(A), %xmm4
  mulps %xmm5, %xmm9
  addps %xmm14, %xmm2
  movaps 0xfa0(A), %xmm11
  mulps %xmm12, %xmm4
  addps %xmm9, %xmm15
  movaps 0xfb0(A), %xmm8
  mulps %xmm7, %xmm11
  addps %xmm4, %xmm15
  mulps %xmm6, %xmm8
  addps %xmm11, %xmm15
  addps %xmm8, %xmm15

  .align 16
jump_49:

  # Check norm of product ||A(3,4)||*||B(4,2)||.
  movss 0x3c(A), %xmm3
  mulss 0x44(B), %xmm3
  comiss tolerance, %xmm3
  jbe jump_50

  # Calculate C(3,2) += A(3,4)*B(4,2).
  movaps 0x400(B), %xmm14
  movaps 0x410(B), %xmm9
  movaps 0x420(B), %xmm4
  movaps 0x430(B), %xmm11
  movaps 0xfc0(A), %xmm8
  movaps 0xfd0(A), %xmm5
  movaps 0xfe0(A), %xmm12
  mulps %xmm14, %xmm8
  mulps %xmm9, %xmm5
  addps %xmm8, %xmm10
  movaps 0xff0(A), %xmm7
  mulps %xmm4, %xmm12
  addps %xmm5, %xmm10
  movaps 0x1000(A), %xmm6
  mulps %xmm11, %xmm7
  addps %xmm12, %xmm10
  movaps 0x1010(A), %xmm3
  mulps %xmm14, %xmm6
  addps %xmm7, %xmm10
  movaps 0x1020(A), %xmm8
  mulps %xmm9, %xmm3
  addps %xmm6, %xmm13
  movaps 0x1030(A), %xmm5
  mulps %xmm4, %xmm8
  addps %xmm3, %xmm13
  movaps 0x1040(A), %xmm12
  mulps %xmm11, %xmm5
  addps %xmm8, %xmm13
  movaps 0x1050(A), %xmm7
  mulps %xmm14, %xmm12
  addps %xmm5, %xmm13
  movaps 0x1060(A), %xmm6
  mulps %xmm9, %xmm7
  addps %xmm12, %xmm2
  movaps 0x1070(A), %xmm3
  mulps %xmm4, %xmm6
  addps %xmm7, %xmm2
  movaps 0x1080(A), %xmm8
  mulps %xmm11, %xmm3
  addps %xmm6, %xmm2
  movaps 0x1090(A), %xmm5
  mulps %xmm14, %xmm8
  addps %xmm3, %xmm2
  movaps 0x10a0(A), %xmm12
  mulps %xmm9, %xmm5
  addps %xmm8, %xmm15
  movaps 0x10b0(A), %xmm7
  mulps %xmm4, %xmm12
  addps %xmm5, %xmm15
  mulps %xmm11, %xmm7
  addps %xmm12, %xmm15
  addps %xmm7, %xmm15

  .align 16
jump_50:

  # Multiply C(3,2) by alpha.
  mulps alpha, %xmm10
  mulps alpha, %xmm13
  mulps alpha, %xmm2
  mulps alpha, %xmm15

  # Add accumulated C(3,2) to already existing.
  addps 0x300(C), %xmm10
  addps 0x310(C), %xmm13
  addps 0x320(C), %xmm2
  addps 0x330(C), %xmm15

  # Write out C(3,2) submatrix block.
  movaps %xmm10, 0x300(C)
  movaps %xmm13, 0x310(C)
  movaps %xmm2, 0x320(C)
  movaps %xmm15, 0x330(C)

  # Reset C(3,3) matrix block accumulators.
  xorps %xmm6, %xmm6
  xorps %xmm3, %xmm3
  xorps %xmm8, %xmm8
  xorps %xmm5, %xmm5

  .align 16
jump_51:

  # Check norm of product ||A(3,1)||*||B(1,3)||.
  movss 0x30(A), %xmm12
  mulss 0x18(B), %xmm12
  comiss tolerance, %xmm12
  jbe jump_52

  # Calculate C(3,3) += A(3,1)*B(1,3).
  movaps 0x140(B), %xmm7
  movaps 0x150(B), %xmm14
  movaps 0x160(B), %xmm9
  movaps 0x170(B), %xmm4
  movaps 0xcc0(A), %xmm11
  movaps 0xcd0(A), %xmm10
  movaps 0xce0(A), %xmm13
  mulps %xmm7, %xmm11
  mulps %xmm14, %xmm10
  addps %xmm11, %xmm6
  movaps 0xcf0(A), %xmm2
  mulps %xmm9, %xmm13
  addps %xmm10, %xmm6
  movaps 0xd00(A), %xmm15
  mulps %xmm4, %xmm2
  addps %xmm13, %xmm6
  movaps 0xd10(A), %xmm12
  mulps %xmm7, %xmm15
  addps %xmm2, %xmm6
  movaps 0xd20(A), %xmm11
  mulps %xmm14, %xmm12
  addps %xmm15, %xmm3
  movaps 0xd30(A), %xmm10
  mulps %xmm9, %xmm11
  addps %xmm12, %xmm3
  movaps 0xd40(A), %xmm13
  mulps %xmm4, %xmm10
  addps %xmm11, %xmm3
  movaps 0xd50(A), %xmm2
  mulps %xmm7, %xmm13
  addps %xmm10, %xmm3
  movaps 0xd60(A), %xmm15
  mulps %xmm14, %xmm2
  addps %xmm13, %xmm8
  movaps 0xd70(A), %xmm12
  mulps %xmm9, %xmm15
  addps %xmm2, %xmm8
  movaps 0xd80(A), %xmm11
  mulps %xmm4, %xmm12
  addps %xmm15, %xmm8
  movaps 0xd90(A), %xmm10
  mulps %xmm7, %xmm11
  addps %xmm12, %xmm8
  movaps 0xda0(A), %xmm13
  mulps %xmm14, %xmm10
  addps %xmm11, %xmm5
  movaps 0xdb0(A), %xmm2
  mulps %xmm9, %xmm13
  addps %xmm10, %xmm5
  mulps %xmm4, %xmm2
  addps %xmm13, %xmm5
  addps %xmm2, %xmm5

  .align 16
jump_52:

  # Check norm of product ||A(3,2)||*||B(2,3)||.
  movss 0x34(A), %xmm15
  mulss 0x28(B), %xmm15
  comiss tolerance, %xmm15
  jbe jump_53

  # Calculate C(3,3) += A(3,2)*B(2,3).
  movaps 0x240(B), %xmm12
  movaps 0x250(B), %xmm11
  movaps 0x260(B), %xmm10
  movaps 0x270(B), %xmm13
  movaps 0xdc0(A), %xmm2
  movaps 0xdd0(A), %xmm7
  movaps 0xde0(A), %xmm14
  mulps %xmm12, %xmm2
  mulps %xmm11, %xmm7
  addps %xmm2, %xmm6
  movaps 0xdf0(A), %xmm9
  mulps %xmm10, %xmm14
  addps %xmm7, %xmm6
  movaps 0xe00(A), %xmm4
  mulps %xmm13, %xmm9
  addps %xmm14, %xmm6
  movaps 0xe10(A), %xmm15
  mulps %xmm12, %xmm4
  addps %xmm9, %xmm6
  movaps 0xe20(A), %xmm2
  mulps %xmm11, %xmm15
  addps %xmm4, %xmm3
  movaps 0xe30(A), %xmm7
  mulps %xmm10, %xmm2
  addps %xmm15, %xmm3
  movaps 0xe40(A), %xmm14
  mulps %xmm13, %xmm7
  addps %xmm2, %xmm3
  movaps 0xe50(A), %xmm9
  mulps %xmm12, %xmm14
  addps %xmm7, %xmm3
  movaps 0xe60(A), %xmm4
  mulps %xmm11, %xmm9
  addps %xmm14, %xmm8
  movaps 0xe70(A), %xmm15
  mulps %xmm10, %xmm4
  addps %xmm9, %xmm8
  movaps 0xe80(A), %xmm2
  mulps %xmm13, %xmm15
  addps %xmm4, %xmm8
  movaps 0xe90(A), %xmm7
  mulps %xmm12, %xmm2
  addps %xmm15, %xmm8
  movaps 0xea0(A), %xmm14
  mulps %xmm11, %xmm7
  addps %xmm2, %xmm5
  movaps 0xeb0(A), %xmm9
  mulps %xmm10, %xmm14
  addps %xmm7, %xmm5
  mulps %xmm13, %xmm9
  addps %xmm14, %xmm5
  addps %xmm9, %xmm5

  .align 16
jump_53:

  # Check norm of product ||A(3,3)||*||B(3,3)||.
  movss 0x38(A), %xmm4
  mulss 0x38(B), %xmm4
  comiss tolerance, %xmm4
  jbe jump_54

  # Calculate C(3,3) += A(3,3)*B(3,3).
  movaps 0x340(B), %xmm15
  movaps 0x350(B), %xmm2
  movaps 0x360(B), %xmm7
  movaps 0x370(B), %xmm14
  movaps 0xec0(A), %xmm9
  movaps 0xed0(A), %xmm12
  movaps 0xee0(A), %xmm11
  mulps %xmm15, %xmm9
  mulps %xmm2, %xmm12
  addps %xmm9, %xmm6
  movaps 0xef0(A), %xmm10
  mulps %xmm7, %xmm11
  addps %xmm12, %xmm6
  movaps 0xf00(A), %xmm13
  mulps %xmm14, %xmm10
  addps %xmm11, %xmm6
  movaps 0xf10(A), %xmm4
  mulps %xmm15, %xmm13
  addps %xmm10, %xmm6
  movaps 0xf20(A), %xmm9
  mulps %xmm2, %xmm4
  addps %xmm13, %xmm3
  movaps 0xf30(A), %xmm12
  mulps %xmm7, %xmm9
  addps %xmm4, %xmm3
  movaps 0xf40(A), %xmm11
  mulps %xmm14, %xmm12
  addps %xmm9, %xmm3
  movaps 0xf50(A), %xmm10
  mulps %xmm15, %xmm11
  addps %xmm12, %xmm3
  movaps 0xf60(A), %xmm13
  mulps %xmm2, %xmm10
  addps %xmm11, %xmm8
  movaps 0xf70(A), %xmm4
  mulps %xmm7, %xmm13
  addps %xmm10, %xmm8
  movaps 0xf80(A), %xmm9
  mulps %xmm14, %xmm4
  addps %xmm13, %xmm8
  movaps 0xf90(A), %xmm12
  mulps %xmm15, %xmm9
  addps %xmm4, %xmm8
  movaps 0xfa0(A), %xmm11
  mulps %xmm2, %xmm12
  addps %xmm9, %xmm5
  movaps 0xfb0(A), %xmm10
  mulps %xmm7, %xmm11
  addps %xmm12, %xmm5
  mulps %xmm14, %xmm10
  addps %xmm11, %xmm5
  addps %xmm10, %xmm5

  .align 16
jump_54:

  # Check norm of product ||A(3,4)||*||B(4,3)||.
  movss 0x3c(A), %xmm13
  mulss 0x48(B), %xmm13
  comiss tolerance, %xmm13
  jbe jump_55

  # Calculate C(3,3) += A(3,4)*B(4,3).
  movaps 0x440(B), %xmm4
  movaps 0x450(B), %xmm9
  movaps 0x460(B), %xmm12
  movaps 0x470(B), %xmm11
  movaps 0xfc0(A), %xmm10
  movaps 0xfd0(A), %xmm15
  movaps 0xfe0(A), %xmm2
  mulps %xmm4, %xmm10
  mulps %xmm9, %xmm15
  addps %xmm10, %xmm6
  movaps 0xff0(A), %xmm7
  mulps %xmm12, %xmm2
  addps %xmm15, %xmm6
  movaps 0x1000(A), %xmm14
  mulps %xmm11, %xmm7
  addps %xmm2, %xmm6
  movaps 0x1010(A), %xmm13
  mulps %xmm4, %xmm14
  addps %xmm7, %xmm6
  movaps 0x1020(A), %xmm10
  mulps %xmm9, %xmm13
  addps %xmm14, %xmm3
  movaps 0x1030(A), %xmm15
  mulps %xmm12, %xmm10
  addps %xmm13, %xmm3
  movaps 0x1040(A), %xmm2
  mulps %xmm11, %xmm15
  addps %xmm10, %xmm3
  movaps 0x1050(A), %xmm7
  mulps %xmm4, %xmm2
  addps %xmm15, %xmm3
  movaps 0x1060(A), %xmm14
  mulps %xmm9, %xmm7
  addps %xmm2, %xmm8
  movaps 0x1070(A), %xmm13
  mulps %xmm12, %xmm14
  addps %xmm7, %xmm8
  movaps 0x1080(A), %xmm10
  mulps %xmm11, %xmm13
  addps %xmm14, %xmm8
  movaps 0x1090(A), %xmm15
  mulps %xmm4, %xmm10
  addps %xmm13, %xmm8
  movaps 0x10a0(A), %xmm2
  mulps %xmm9, %xmm15
  addps %xmm10, %xmm5
  movaps 0x10b0(A), %xmm7
  mulps %xmm12, %xmm2
  addps %xmm15, %xmm5
  mulps %xmm11, %xmm7
  addps %xmm2, %xmm5
  addps %xmm7, %xmm5

  .align 16
jump_55:

  # Multiply C(3,3) by alpha.
  mulps alpha, %xmm6
  mulps alpha, %xmm3
  mulps alpha, %xmm8
  mulps alpha, %xmm5

  # Add accumulated C(3,3) to already existing.
  addps 0x340(C), %xmm6
  addps 0x350(C), %xmm3
  addps 0x360(C), %xmm8
  addps 0x370(C), %xmm5

  # Write out C(3,3) submatrix block.
  movaps %xmm6, 0x340(C)
  movaps %xmm3, 0x350(C)
  movaps %xmm8, 0x360(C)
  movaps %xmm5, 0x370(C)

  # Reset C(3,4) matrix block accumulators.
  xorps %xmm14, %xmm14
  xorps %xmm13, %xmm13
  xorps %xmm10, %xmm10
  xorps %xmm15, %xmm15

  .align 16
jump_56:

  # Check norm of product ||A(3,1)||*||B(1,4)||.
  movss 0x30(A), %xmm2
  mulss 0x1c(B), %xmm2
  comiss tolerance, %xmm2
  jbe jump_57

  # Calculate C(3,4) += A(3,1)*B(1,4).
  movaps 0x180(B), %xmm7
  movaps 0x190(B), %xmm4
  movaps 0x1a0(B), %xmm9
  movaps 0x1b0(B), %xmm12
  movaps 0xcc0(A), %xmm11
  movaps 0xcd0(A), %xmm6
  movaps 0xce0(A), %xmm3
  mulps %xmm7, %xmm11
  mulps %xmm4, %xmm6
  addps %xmm11, %xmm14
  movaps 0xcf0(A), %xmm8
  mulps %xmm9, %xmm3
  addps %xmm6, %xmm14
  movaps 0xd00(A), %xmm5
  mulps %xmm12, %xmm8
  addps %xmm3, %xmm14
  movaps 0xd10(A), %xmm2
  mulps %xmm7, %xmm5
  addps %xmm8, %xmm14
  movaps 0xd20(A), %xmm11
  mulps %xmm4, %xmm2
  addps %xmm5, %xmm13
  movaps 0xd30(A), %xmm6
  mulps %xmm9, %xmm11
  addps %xmm2, %xmm13
  movaps 0xd40(A), %xmm3
  mulps %xmm12, %xmm6
  addps %xmm11, %xmm13
  movaps 0xd50(A), %xmm8
  mulps %xmm7, %xmm3
  addps %xmm6, %xmm13
  movaps 0xd60(A), %xmm5
  mulps %xmm4, %xmm8
  addps %xmm3, %xmm10
  movaps 0xd70(A), %xmm2
  mulps %xmm9, %xmm5
  addps %xmm8, %xmm10
  movaps 0xd80(A), %xmm11
  mulps %xmm12, %xmm2
  addps %xmm5, %xmm10
  movaps 0xd90(A), %xmm6
  mulps %xmm7, %xmm11
  addps %xmm2, %xmm10
  movaps 0xda0(A), %xmm3
  mulps %xmm4, %xmm6
  addps %xmm11, %xmm15
  movaps 0xdb0(A), %xmm8
  mulps %xmm9, %xmm3
  addps %xmm6, %xmm15
  mulps %xmm12, %xmm8
  addps %xmm3, %xmm15
  addps %xmm8, %xmm15

  .align 16
jump_57:

  # Check norm of product ||A(3,2)||*||B(2,4)||.
  movss 0x34(A), %xmm5
  mulss 0x2c(B), %xmm5
  comiss tolerance, %xmm5
  jbe jump_58

  # Calculate C(3,4) += A(3,2)*B(2,4).
  movaps 0x280(B), %xmm2
  movaps 0x290(B), %xmm11
  movaps 0x2a0(B), %xmm6
  movaps 0x2b0(B), %xmm3
  movaps 0xdc0(A), %xmm8
  movaps 0xdd0(A), %xmm7
  movaps 0xde0(A), %xmm4
  mulps %xmm2, %xmm8
  mulps %xmm11, %xmm7
  addps %xmm8, %xmm14
  movaps 0xdf0(A), %xmm9
  mulps %xmm6, %xmm4
  addps %xmm7, %xmm14
  movaps 0xe00(A), %xmm12
  mulps %xmm3, %xmm9
  addps %xmm4, %xmm14
  movaps 0xe10(A), %xmm5
  mulps %xmm2, %xmm12
  addps %xmm9, %xmm14
  movaps 0xe20(A), %xmm8
  mulps %xmm11, %xmm5
  addps %xmm12, %xmm13
  movaps 0xe30(A), %xmm7
  mulps %xmm6, %xmm8
  addps %xmm5, %xmm13
  movaps 0xe40(A), %xmm4
  mulps %xmm3, %xmm7
  addps %xmm8, %xmm13
  movaps 0xe50(A), %xmm9
  mulps %xmm2, %xmm4
  addps %xmm7, %xmm13
  movaps 0xe60(A), %xmm12
  mulps %xmm11, %xmm9
  addps %xmm4, %xmm10
  movaps 0xe70(A), %xmm5
  mulps %xmm6, %xmm12
  addps %xmm9, %xmm10
  movaps 0xe80(A), %xmm8
  mulps %xmm3, %xmm5
  addps %xmm12, %xmm10
  movaps 0xe90(A), %xmm7
  mulps %xmm2, %xmm8
  addps %xmm5, %xmm10
  movaps 0xea0(A), %xmm4
  mulps %xmm11, %xmm7
  addps %xmm8, %xmm15
  movaps 0xeb0(A), %xmm9
  mulps %xmm6, %xmm4
  addps %xmm7, %xmm15
  mulps %xmm3, %xmm9
  addps %xmm4, %xmm15
  addps %xmm9, %xmm15

  .align 16
jump_58:

  # Check norm of product ||A(3,3)||*||B(3,4)||.
  movss 0x38(A), %xmm12
  mulss 0x3c(B), %xmm12
  comiss tolerance, %xmm12
  jbe jump_59

  # Calculate C(3,4) += A(3,3)*B(3,4).
  movaps 0x380(B), %xmm5
  movaps 0x390(B), %xmm8
  movaps 0x3a0(B), %xmm7
  movaps 0x3b0(B), %xmm4
  movaps 0xec0(A), %xmm9
  movaps 0xed0(A), %xmm2
  movaps 0xee0(A), %xmm11
  mulps %xmm5, %xmm9
  mulps %xmm8, %xmm2
  addps %xmm9, %xmm14
  movaps 0xef0(A), %xmm6
  mulps %xmm7, %xmm11
  addps %xmm2, %xmm14
  movaps 0xf00(A), %xmm3
  mulps %xmm4, %xmm6
  addps %xmm11, %xmm14
  movaps 0xf10(A), %xmm12
  mulps %xmm5, %xmm3
  addps %xmm6, %xmm14
  movaps 0xf20(A), %xmm9
  mulps %xmm8, %xmm12
  addps %xmm3, %xmm13
  movaps 0xf30(A), %xmm2
  mulps %xmm7, %xmm9
  addps %xmm12, %xmm13
  movaps 0xf40(A), %xmm11
  mulps %xmm4, %xmm2
  addps %xmm9, %xmm13
  movaps 0xf50(A), %xmm6
  mulps %xmm5, %xmm11
  addps %xmm2, %xmm13
  movaps 0xf60(A), %xmm3
  mulps %xmm8, %xmm6
  addps %xmm11, %xmm10
  movaps 0xf70(A), %xmm12
  mulps %xmm7, %xmm3
  addps %xmm6, %xmm10
  movaps 0xf80(A), %xmm9
  mulps %xmm4, %xmm12
  addps %xmm3, %xmm10
  movaps 0xf90(A), %xmm2
  mulps %xmm5, %xmm9
  addps %xmm12, %xmm10
  movaps 0xfa0(A), %xmm11
  mulps %xmm8, %xmm2
  addps %xmm9, %xmm15
  movaps 0xfb0(A), %xmm6
  mulps %xmm7, %xmm11
  addps %xmm2, %xmm15
  mulps %xmm4, %xmm6
  addps %xmm11, %xmm15
  addps %xmm6, %xmm15

  .align 16
jump_59:

  # Check norm of product ||A(3,4)||*||B(4,4)||.
  movss 0x3c(A), %xmm3
  mulss 0x4c(B), %xmm3
  comiss tolerance, %xmm3
  jbe jump_60

  # Calculate C(3,4) += A(3,4)*B(4,4).
  movaps 0x480(B), %xmm12
  movaps 0x490(B), %xmm9
  movaps 0x4a0(B), %xmm2
  movaps 0x4b0(B), %xmm11
  movaps 0xfc0(A), %xmm6
  movaps 0xfd0(A), %xmm5
  movaps 0xfe0(A), %xmm8
  mulps %xmm12, %xmm6
  mulps %xmm9, %xmm5
  addps %xmm6, %xmm14
  movaps 0xff0(A), %xmm7
  mulps %xmm2, %xmm8
  addps %xmm5, %xmm14
  movaps 0x1000(A), %xmm4
  mulps %xmm11, %xmm7
  addps %xmm8, %xmm14
  movaps 0x1010(A), %xmm3
  mulps %xmm12, %xmm4
  addps %xmm7, %xmm14
  movaps 0x1020(A), %xmm6
  mulps %xmm9, %xmm3
  addps %xmm4, %xmm13
  movaps 0x1030(A), %xmm5
  mulps %xmm2, %xmm6
  addps %xmm3, %xmm13
  movaps 0x1040(A), %xmm8
  mulps %xmm11, %xmm5
  addps %xmm6, %xmm13
  movaps 0x1050(A), %xmm7
  mulps %xmm12, %xmm8
  addps %xmm5, %xmm13
  movaps 0x1060(A), %xmm4
  mulps %xmm9, %xmm7
  addps %xmm8, %xmm10
  movaps 0x1070(A), %xmm3
  mulps %xmm2, %xmm4
  addps %xmm7, %xmm10
  movaps 0x1080(A), %xmm6
  mulps %xmm11, %xmm3
  addps %xmm4, %xmm10
  movaps 0x1090(A), %xmm5
  mulps %xmm12, %xmm6
  addps %xmm3, %xmm10
  movaps 0x10a0(A), %xmm8
  mulps %xmm9, %xmm5
  addps %xmm6, %xmm15
  movaps 0x10b0(A), %xmm7
  mulps %xmm2, %xmm8
  addps %xmm5, %xmm15
  mulps %xmm11, %xmm7
  addps %xmm8, %xmm15
  addps %xmm7, %xmm15

  .align 16
jump_60:

  # Multiply C(3,4) by alpha.
  mulps alpha, %xmm14
  mulps alpha, %xmm13
  mulps alpha, %xmm10
  mulps alpha, %xmm15

  # Add accumulated C(3,4) to already existing.
  addps 0x380(C), %xmm14
  addps 0x390(C), %xmm13
  addps 0x3a0(C), %xmm10
  addps 0x3b0(C), %xmm15

  # Write out C(3,4) submatrix block.
  movaps %xmm14, 0x380(C)
  movaps %xmm13, 0x390(C)
  movaps %xmm10, 0x3a0(C)
  movaps %xmm15, 0x3b0(C)

  # Reset C(4,1) matrix block accumulators.
  xorps %xmm4, %xmm4
  xorps %xmm3, %xmm3
  xorps %xmm6, %xmm6
  xorps %xmm5, %xmm5

  .align 16
jump_61:

  # Check norm of product ||A(4,1)||*||B(1,1)||.
  movss 0x40(A), %xmm8
  mulss 0x10(B), %xmm8
  comiss tolerance, %xmm8
  jbe jump_62

  # Calculate C(4,1) += A(4,1)*B(1,1).
  movaps 0xc0(B), %xmm7
  movaps 0xd0(B), %xmm12
  movaps 0xe0(B), %xmm9
  movaps 0xf0(B), %xmm2
  movaps 0x10c0(A), %xmm11
  movaps 0x10d0(A), %xmm14
  movaps 0x10e0(A), %xmm13
  mulps %xmm7, %xmm11
  mulps %xmm12, %xmm14
  addps %xmm11, %xmm4
  movaps 0x10f0(A), %xmm10
  mulps %xmm9, %xmm13
  addps %xmm14, %xmm4
  movaps 0x1100(A), %xmm15
  mulps %xmm2, %xmm10
  addps %xmm13, %xmm4
  movaps 0x1110(A), %xmm8
  mulps %xmm7, %xmm15
  addps %xmm10, %xmm4
  movaps 0x1120(A), %xmm11
  mulps %xmm12, %xmm8
  addps %xmm15, %xmm3
  movaps 0x1130(A), %xmm14
  mulps %xmm9, %xmm11
  addps %xmm8, %xmm3
  movaps 0x1140(A), %xmm13
  mulps %xmm2, %xmm14
  addps %xmm11, %xmm3
  movaps 0x1150(A), %xmm10
  mulps %xmm7, %xmm13
  addps %xmm14, %xmm3
  movaps 0x1160(A), %xmm15
  mulps %xmm12, %xmm10
  addps %xmm13, %xmm6
  movaps 0x1170(A), %xmm8
  mulps %xmm9, %xmm15
  addps %xmm10, %xmm6
  movaps 0x1180(A), %xmm11
  mulps %xmm2, %xmm8
  addps %xmm15, %xmm6
  movaps 0x1190(A), %xmm14
  mulps %xmm7, %xmm11
  addps %xmm8, %xmm6
  movaps 0x11a0(A), %xmm13
  mulps %xmm12, %xmm14
  addps %xmm11, %xmm5
  movaps 0x11b0(A), %xmm10
  mulps %xmm9, %xmm13
  addps %xmm14, %xmm5
  mulps %xmm2, %xmm10
  addps %xmm13, %xmm5
  addps %xmm10, %xmm5

  .align 16
jump_62:

  # Check norm of product ||A(4,2)||*||B(2,1)||.
  movss 0x44(A), %xmm15
  mulss 0x20(B), %xmm15
  comiss tolerance, %xmm15
  jbe jump_63

  # Calculate C(4,1) += A(4,2)*B(2,1).
  movaps 0x1c0(B), %xmm8
  movaps 0x1d0(B), %xmm11
  movaps 0x1e0(B), %xmm14
  movaps 0x1f0(B), %xmm13
  movaps 0x11c0(A), %xmm10
  movaps 0x11d0(A), %xmm7
  movaps 0x11e0(A), %xmm12
  mulps %xmm8, %xmm10
  mulps %xmm11, %xmm7
  addps %xmm10, %xmm4
  movaps 0x11f0(A), %xmm9
  mulps %xmm14, %xmm12
  addps %xmm7, %xmm4
  movaps 0x1200(A), %xmm2
  mulps %xmm13, %xmm9
  addps %xmm12, %xmm4
  movaps 0x1210(A), %xmm15
  mulps %xmm8, %xmm2
  addps %xmm9, %xmm4
  movaps 0x1220(A), %xmm10
  mulps %xmm11, %xmm15
  addps %xmm2, %xmm3
  movaps 0x1230(A), %xmm7
  mulps %xmm14, %xmm10
  addps %xmm15, %xmm3
  movaps 0x1240(A), %xmm12
  mulps %xmm13, %xmm7
  addps %xmm10, %xmm3
  movaps 0x1250(A), %xmm9
  mulps %xmm8, %xmm12
  addps %xmm7, %xmm3
  movaps 0x1260(A), %xmm2
  mulps %xmm11, %xmm9
  addps %xmm12, %xmm6
  movaps 0x1270(A), %xmm15
  mulps %xmm14, %xmm2
  addps %xmm9, %xmm6
  movaps 0x1280(A), %xmm10
  mulps %xmm13, %xmm15
  addps %xmm2, %xmm6
  movaps 0x1290(A), %xmm7
  mulps %xmm8, %xmm10
  addps %xmm15, %xmm6
  movaps 0x12a0(A), %xmm12
  mulps %xmm11, %xmm7
  addps %xmm10, %xmm5
  movaps 0x12b0(A), %xmm9
  mulps %xmm14, %xmm12
  addps %xmm7, %xmm5
  mulps %xmm13, %xmm9
  addps %xmm12, %xmm5
  addps %xmm9, %xmm5

  .align 16
jump_63:

  # Check norm of product ||A(4,3)||*||B(3,1)||.
  movss 0x48(A), %xmm2
  mulss 0x30(B), %xmm2
  comiss tolerance, %xmm2
  jbe jump_64

  # Calculate C(4,1) += A(4,3)*B(3,1).
  movaps 0x2c0(B), %xmm15
  movaps 0x2d0(B), %xmm10
  movaps 0x2e0(B), %xmm7
  movaps 0x2f0(B), %xmm12
  movaps 0x12c0(A), %xmm9
  movaps 0x12d0(A), %xmm8
  movaps 0x12e0(A), %xmm11
  mulps %xmm15, %xmm9
  mulps %xmm10, %xmm8
  addps %xmm9, %xmm4
  movaps 0x12f0(A), %xmm14
  mulps %xmm7, %xmm11
  addps %xmm8, %xmm4
  movaps 0x1300(A), %xmm13
  mulps %xmm12, %xmm14
  addps %xmm11, %xmm4
  movaps 0x1310(A), %xmm2
  mulps %xmm15, %xmm13
  addps %xmm14, %xmm4
  movaps 0x1320(A), %xmm9
  mulps %xmm10, %xmm2
  addps %xmm13, %xmm3
  movaps 0x1330(A), %xmm8
  mulps %xmm7, %xmm9
  addps %xmm2, %xmm3
  movaps 0x1340(A), %xmm11
  mulps %xmm12, %xmm8
  addps %xmm9, %xmm3
  movaps 0x1350(A), %xmm14
  mulps %xmm15, %xmm11
  addps %xmm8, %xmm3
  movaps 0x1360(A), %xmm13
  mulps %xmm10, %xmm14
  addps %xmm11, %xmm6
  movaps 0x1370(A), %xmm2
  mulps %xmm7, %xmm13
  addps %xmm14, %xmm6
  movaps 0x1380(A), %xmm9
  mulps %xmm12, %xmm2
  addps %xmm13, %xmm6
  movaps 0x1390(A), %xmm8
  mulps %xmm15, %xmm9
  addps %xmm2, %xmm6
  movaps 0x13a0(A), %xmm11
  mulps %xmm10, %xmm8
  addps %xmm9, %xmm5
  movaps 0x13b0(A), %xmm14
  mulps %xmm7, %xmm11
  addps %xmm8, %xmm5
  mulps %xmm12, %xmm14
  addps %xmm11, %xmm5
  addps %xmm14, %xmm5

  .align 16
jump_64:

  # Check norm of product ||A(4,4)||*||B(4,1)||.
  movss 0x4c(A), %xmm13
  mulss 0x40(B), %xmm13
  comiss tolerance, %xmm13
  jbe jump_65

  # Calculate C(4,1) += A(4,4)*B(4,1).
  movaps 0x3c0(B), %xmm2
  movaps 0x3d0(B), %xmm9
  movaps 0x3e0(B), %xmm8
  movaps 0x3f0(B), %xmm11
  movaps 0x13c0(A), %xmm14
  movaps 0x13d0(A), %xmm15
  movaps 0x13e0(A), %xmm10
  mulps %xmm2, %xmm14
  mulps %xmm9, %xmm15
  addps %xmm14, %xmm4
  movaps 0x13f0(A), %xmm7
  mulps %xmm8, %xmm10
  addps %xmm15, %xmm4
  movaps 0x1400(A), %xmm12
  mulps %xmm11, %xmm7
  addps %xmm10, %xmm4
  movaps 0x1410(A), %xmm13
  mulps %xmm2, %xmm12
  addps %xmm7, %xmm4
  movaps 0x1420(A), %xmm14
  mulps %xmm9, %xmm13
  addps %xmm12, %xmm3
  movaps 0x1430(A), %xmm15
  mulps %xmm8, %xmm14
  addps %xmm13, %xmm3
  movaps 0x1440(A), %xmm10
  mulps %xmm11, %xmm15
  addps %xmm14, %xmm3
  movaps 0x1450(A), %xmm7
  mulps %xmm2, %xmm10
  addps %xmm15, %xmm3
  movaps 0x1460(A), %xmm12
  mulps %xmm9, %xmm7
  addps %xmm10, %xmm6
  movaps 0x1470(A), %xmm13
  mulps %xmm8, %xmm12
  addps %xmm7, %xmm6
  movaps 0x1480(A), %xmm14
  mulps %xmm11, %xmm13
  addps %xmm12, %xmm6
  movaps 0x1490(A), %xmm15
  mulps %xmm2, %xmm14
  addps %xmm13, %xmm6
  movaps 0x14a0(A), %xmm10
  mulps %xmm9, %xmm15
  addps %xmm14, %xmm5
  movaps 0x14b0(A), %xmm7
  mulps %xmm8, %xmm10
  addps %xmm15, %xmm5
  mulps %xmm11, %xmm7
  addps %xmm10, %xmm5
  addps %xmm7, %xmm5

  .align 16
jump_65:

  # Multiply C(4,1) by alpha.
  mulps alpha, %xmm4
  mulps alpha, %xmm3
  mulps alpha, %xmm6
  mulps alpha, %xmm5

  # Add accumulated C(4,1) to already existing.
  addps 0x3c0(C), %xmm4
  addps 0x3d0(C), %xmm3
  addps 0x3e0(C), %xmm6
  addps 0x3f0(C), %xmm5

  # Write out C(4,1) submatrix block.
  movaps %xmm4, 0x3c0(C)
  movaps %xmm3, 0x3d0(C)
  movaps %xmm6, 0x3e0(C)
  movaps %xmm5, 0x3f0(C)

  # Reset C(4,2) matrix block accumulators.
  xorps %xmm12, %xmm12
  xorps %xmm13, %xmm13
  xorps %xmm14, %xmm14
  xorps %xmm15, %xmm15

  .align 16
jump_66:

  # Check norm of product ||A(4,1)||*||B(1,2)||.
  movss 0x40(A), %xmm10
  mulss 0x14(B), %xmm10
  comiss tolerance, %xmm10
  jbe jump_67

  # Calculate C(4,2) += A(4,1)*B(1,2).
  movaps 0x100(B), %xmm7
  movaps 0x110(B), %xmm2
  movaps 0x120(B), %xmm9
  movaps 0x130(B), %xmm8
  movaps 0x10c0(A), %xmm11
  movaps 0x10d0(A), %xmm4
  movaps 0x10e0(A), %xmm3
  mulps %xmm7, %xmm11
  mulps %xmm2, %xmm4
  addps %xmm11, %xmm12
  movaps 0x10f0(A), %xmm6
  mulps %xmm9, %xmm3
  addps %xmm4, %xmm12
  movaps 0x1100(A), %xmm5
  mulps %xmm8, %xmm6
  addps %xmm3, %xmm12
  movaps 0x1110(A), %xmm10
  mulps %xmm7, %xmm5
  addps %xmm6, %xmm12
  movaps 0x1120(A), %xmm11
  mulps %xmm2, %xmm10
  addps %xmm5, %xmm13
  movaps 0x1130(A), %xmm4
  mulps %xmm9, %xmm11
  addps %xmm10, %xmm13
  movaps 0x1140(A), %xmm3
  mulps %xmm8, %xmm4
  addps %xmm11, %xmm13
  movaps 0x1150(A), %xmm6
  mulps %xmm7, %xmm3
  addps %xmm4, %xmm13
  movaps 0x1160(A), %xmm5
  mulps %xmm2, %xmm6
  addps %xmm3, %xmm14
  movaps 0x1170(A), %xmm10
  mulps %xmm9, %xmm5
  addps %xmm6, %xmm14
  movaps 0x1180(A), %xmm11
  mulps %xmm8, %xmm10
  addps %xmm5, %xmm14
  movaps 0x1190(A), %xmm4
  mulps %xmm7, %xmm11
  addps %xmm10, %xmm14
  movaps 0x11a0(A), %xmm3
  mulps %xmm2, %xmm4
  addps %xmm11, %xmm15
  movaps 0x11b0(A), %xmm6
  mulps %xmm9, %xmm3
  addps %xmm4, %xmm15
  mulps %xmm8, %xmm6
  addps %xmm3, %xmm15
  addps %xmm6, %xmm15

  .align 16
jump_67:

  # Check norm of product ||A(4,2)||*||B(2,2)||.
  movss 0x44(A), %xmm5
  mulss 0x24(B), %xmm5
  comiss tolerance, %xmm5
  jbe jump_68

  # Calculate C(4,2) += A(4,2)*B(2,2).
  movaps 0x200(B), %xmm10
  movaps 0x210(B), %xmm11
  movaps 0x220(B), %xmm4
  movaps 0x230(B), %xmm3
  movaps 0x11c0(A), %xmm6
  movaps 0x11d0(A), %xmm7
  movaps 0x11e0(A), %xmm2
  mulps %xmm10, %xmm6
  mulps %xmm11, %xmm7
  addps %xmm6, %xmm12
  movaps 0x11f0(A), %xmm9
  mulps %xmm4, %xmm2
  addps %xmm7, %xmm12
  movaps 0x1200(A), %xmm8
  mulps %xmm3, %xmm9
  addps %xmm2, %xmm12
  movaps 0x1210(A), %xmm5
  mulps %xmm10, %xmm8
  addps %xmm9, %xmm12
  movaps 0x1220(A), %xmm6
  mulps %xmm11, %xmm5
  addps %xmm8, %xmm13
  movaps 0x1230(A), %xmm7
  mulps %xmm4, %xmm6
  addps %xmm5, %xmm13
  movaps 0x1240(A), %xmm2
  mulps %xmm3, %xmm7
  addps %xmm6, %xmm13
  movaps 0x1250(A), %xmm9
  mulps %xmm10, %xmm2
  addps %xmm7, %xmm13
  movaps 0x1260(A), %xmm8
  mulps %xmm11, %xmm9
  addps %xmm2, %xmm14
  movaps 0x1270(A), %xmm5
  mulps %xmm4, %xmm8
  addps %xmm9, %xmm14
  movaps 0x1280(A), %xmm6
  mulps %xmm3, %xmm5
  addps %xmm8, %xmm14
  movaps 0x1290(A), %xmm7
  mulps %xmm10, %xmm6
  addps %xmm5, %xmm14
  movaps 0x12a0(A), %xmm2
  mulps %xmm11, %xmm7
  addps %xmm6, %xmm15
  movaps 0x12b0(A), %xmm9
  mulps %xmm4, %xmm2
  addps %xmm7, %xmm15
  mulps %xmm3, %xmm9
  addps %xmm2, %xmm15
  addps %xmm9, %xmm15

  .align 16
jump_68:

  # Check norm of product ||A(4,3)||*||B(3,2)||.
  movss 0x48(A), %xmm8
  mulss 0x34(B), %xmm8
  comiss tolerance, %xmm8
  jbe jump_69

  # Calculate C(4,2) += A(4,3)*B(3,2).
  movaps 0x300(B), %xmm5
  movaps 0x310(B), %xmm6
  movaps 0x320(B), %xmm7
  movaps 0x330(B), %xmm2
  movaps 0x12c0(A), %xmm9
  movaps 0x12d0(A), %xmm10
  movaps 0x12e0(A), %xmm11
  mulps %xmm5, %xmm9
  mulps %xmm6, %xmm10
  addps %xmm9, %xmm12
  movaps 0x12f0(A), %xmm4
  mulps %xmm7, %xmm11
  addps %xmm10, %xmm12
  movaps 0x1300(A), %xmm3
  mulps %xmm2, %xmm4
  addps %xmm11, %xmm12
  movaps 0x1310(A), %xmm8
  mulps %xmm5, %xmm3
  addps %xmm4, %xmm12
  movaps 0x1320(A), %xmm9
  mulps %xmm6, %xmm8
  addps %xmm3, %xmm13
  movaps 0x1330(A), %xmm10
  mulps %xmm7, %xmm9
  addps %xmm8, %xmm13
  movaps 0x1340(A), %xmm11
  mulps %xmm2, %xmm10
  addps %xmm9, %xmm13
  movaps 0x1350(A), %xmm4
  mulps %xmm5, %xmm11
  addps %xmm10, %xmm13
  movaps 0x1360(A), %xmm3
  mulps %xmm6, %xmm4
  addps %xmm11, %xmm14
  movaps 0x1370(A), %xmm8
  mulps %xmm7, %xmm3
  addps %xmm4, %xmm14
  movaps 0x1380(A), %xmm9
  mulps %xmm2, %xmm8
  addps %xmm3, %xmm14
  movaps 0x1390(A), %xmm10
  mulps %xmm5, %xmm9
  addps %xmm8, %xmm14
  movaps 0x13a0(A), %xmm11
  mulps %xmm6, %xmm10
  addps %xmm9, %xmm15
  movaps 0x13b0(A), %xmm4
  mulps %xmm7, %xmm11
  addps %xmm10, %xmm15
  mulps %xmm2, %xmm4
  addps %xmm11, %xmm15
  addps %xmm4, %xmm15

  .align 16
jump_69:

  # Check norm of product ||A(4,4)||*||B(4,2)||.
  movss 0x4c(A), %xmm3
  mulss 0x44(B), %xmm3
  comiss tolerance, %xmm3
  jbe jump_70

  # Calculate C(4,2) += A(4,4)*B(4,2).
  movaps 0x400(B), %xmm8
  movaps 0x410(B), %xmm9
  movaps 0x420(B), %xmm10
  movaps 0x430(B), %xmm11
  movaps 0x13c0(A), %xmm4
  movaps 0x13d0(A), %xmm5
  movaps 0x13e0(A), %xmm6
  mulps %xmm8, %xmm4
  mulps %xmm9, %xmm5
  addps %xmm4, %xmm12
  movaps 0x13f0(A), %xmm7
  mulps %xmm10, %xmm6
  addps %xmm5, %xmm12
  movaps 0x1400(A), %xmm2
  mulps %xmm11, %xmm7
  addps %xmm6, %xmm12
  movaps 0x1410(A), %xmm3
  mulps %xmm8, %xmm2
  addps %xmm7, %xmm12
  movaps 0x1420(A), %xmm4
  mulps %xmm9, %xmm3
  addps %xmm2, %xmm13
  movaps 0x1430(A), %xmm5
  mulps %xmm10, %xmm4
  addps %xmm3, %xmm13
  movaps 0x1440(A), %xmm6
  mulps %xmm11, %xmm5
  addps %xmm4, %xmm13
  movaps 0x1450(A), %xmm7
  mulps %xmm8, %xmm6
  addps %xmm5, %xmm13
  movaps 0x1460(A), %xmm2
  mulps %xmm9, %xmm7
  addps %xmm6, %xmm14
  movaps 0x1470(A), %xmm3
  mulps %xmm10, %xmm2
  addps %xmm7, %xmm14
  movaps 0x1480(A), %xmm4
  mulps %xmm11, %xmm3
  addps %xmm2, %xmm14
  movaps 0x1490(A), %xmm5
  mulps %xmm8, %xmm4
  addps %xmm3, %xmm14
  movaps 0x14a0(A), %xmm6
  mulps %xmm9, %xmm5
  addps %xmm4, %xmm15
  movaps 0x14b0(A), %xmm7
  mulps %xmm10, %xmm6
  addps %xmm5, %xmm15
  mulps %xmm11, %xmm7
  addps %xmm6, %xmm15
  addps %xmm7, %xmm15

  .align 16
jump_70:

  # Multiply C(4,2) by alpha.
  mulps alpha, %xmm12
  mulps alpha, %xmm13
  mulps alpha, %xmm14
  mulps alpha, %xmm15

  # Add accumulated C(4,2) to already existing.
  addps 0x400(C), %xmm12
  addps 0x410(C), %xmm13
  addps 0x420(C), %xmm14
  addps 0x430(C), %xmm15

  # Write out C(4,2) submatrix block.
  movaps %xmm12, 0x400(C)
  movaps %xmm13, 0x410(C)
  movaps %xmm14, 0x420(C)
  movaps %xmm15, 0x430(C)

  # Reset C(4,3) matrix block accumulators.
  xorps %xmm2, %xmm2
  xorps %xmm3, %xmm3
  xorps %xmm4, %xmm4
  xorps %xmm5, %xmm5

  .align 16
jump_71:

  # Check norm of product ||A(4,1)||*||B(1,3)||.
  movss 0x40(A), %xmm6
  mulss 0x18(B), %xmm6
  comiss tolerance, %xmm6
  jbe jump_72

  # Calculate C(4,3) += A(4,1)*B(1,3).
  movaps 0x140(B), %xmm7
  movaps 0x150(B), %xmm8
  movaps 0x160(B), %xmm9
  movaps 0x170(B), %xmm10
  movaps 0x10c0(A), %xmm11
  movaps 0x10d0(A), %xmm12
  movaps 0x10e0(A), %xmm13
  mulps %xmm7, %xmm11
  mulps %xmm8, %xmm12
  addps %xmm11, %xmm2
  movaps 0x10f0(A), %xmm14
  mulps %xmm9, %xmm13
  addps %xmm12, %xmm2
  movaps 0x1100(A), %xmm15
  mulps %xmm10, %xmm14
  addps %xmm13, %xmm2
  movaps 0x1110(A), %xmm6
  mulps %xmm7, %xmm15
  addps %xmm14, %xmm2
  movaps 0x1120(A), %xmm11
  mulps %xmm8, %xmm6
  addps %xmm15, %xmm3
  movaps 0x1130(A), %xmm12
  mulps %xmm9, %xmm11
  addps %xmm6, %xmm3
  movaps 0x1140(A), %xmm13
  mulps %xmm10, %xmm12
  addps %xmm11, %xmm3
  movaps 0x1150(A), %xmm14
  mulps %xmm7, %xmm13
  addps %xmm12, %xmm3
  movaps 0x1160(A), %xmm15
  mulps %xmm8, %xmm14
  addps %xmm13, %xmm4
  movaps 0x1170(A), %xmm6
  mulps %xmm9, %xmm15
  addps %xmm14, %xmm4
  movaps 0x1180(A), %xmm11
  mulps %xmm10, %xmm6
  addps %xmm15, %xmm4
  movaps 0x1190(A), %xmm12
  mulps %xmm7, %xmm11
  addps %xmm6, %xmm4
  movaps 0x11a0(A), %xmm13
  mulps %xmm8, %xmm12
  addps %xmm11, %xmm5
  movaps 0x11b0(A), %xmm14
  mulps %xmm9, %xmm13
  addps %xmm12, %xmm5
  mulps %xmm10, %xmm14
  addps %xmm13, %xmm5
  addps %xmm14, %xmm5

  .align 16
jump_72:

  # Check norm of product ||A(4,2)||*||B(2,3)||.
  movss 0x44(A), %xmm15
  mulss 0x28(B), %xmm15
  comiss tolerance, %xmm15
  jbe jump_73

  # Calculate C(4,3) += A(4,2)*B(2,3).
  movaps 0x240(B), %xmm6
  movaps 0x250(B), %xmm11
  movaps 0x260(B), %xmm12
  movaps 0x270(B), %xmm13
  movaps 0x11c0(A), %xmm14
  movaps 0x11d0(A), %xmm7
  movaps 0x11e0(A), %xmm8
  mulps %xmm6, %xmm14
  mulps %xmm11, %xmm7
  addps %xmm14, %xmm2
  movaps 0x11f0(A), %xmm9
  mulps %xmm12, %xmm8
  addps %xmm7, %xmm2
  movaps 0x1200(A), %xmm10
  mulps %xmm13, %xmm9
  addps %xmm8, %xmm2
  movaps 0x1210(A), %xmm15
  mulps %xmm6, %xmm10
  addps %xmm9, %xmm2
  movaps 0x1220(A), %xmm14
  mulps %xmm11, %xmm15
  addps %xmm10, %xmm3
  movaps 0x1230(A), %xmm7
  mulps %xmm12, %xmm14
  addps %xmm15, %xmm3
  movaps 0x1240(A), %xmm8
  mulps %xmm13, %xmm7
  addps %xmm14, %xmm3
  movaps 0x1250(A), %xmm9
  mulps %xmm6, %xmm8
  addps %xmm7, %xmm3
  movaps 0x1260(A), %xmm10
  mulps %xmm11, %xmm9
  addps %xmm8, %xmm4
  movaps 0x1270(A), %xmm15
  mulps %xmm12, %xmm10
  addps %xmm9, %xmm4
  movaps 0x1280(A), %xmm14
  mulps %xmm13, %xmm15
  addps %xmm10, %xmm4
  movaps 0x1290(A), %xmm7
  mulps %xmm6, %xmm14
  addps %xmm15, %xmm4
  movaps 0x12a0(A), %xmm8
  mulps %xmm11, %xmm7
  addps %xmm14, %xmm5
  movaps 0x12b0(A), %xmm9
  mulps %xmm12, %xmm8
  addps %xmm7, %xmm5
  mulps %xmm13, %xmm9
  addps %xmm8, %xmm5
  addps %xmm9, %xmm5

  .align 16
jump_73:

  # Check norm of product ||A(4,3)||*||B(3,3)||.
  movss 0x48(A), %xmm10
  mulss 0x38(B), %xmm10
  comiss tolerance, %xmm10
  jbe jump_74

  # Calculate C(4,3) += A(4,3)*B(3,3).
  movaps 0x340(B), %xmm15
  movaps 0x350(B), %xmm14
  movaps 0x360(B), %xmm7
  movaps 0x370(B), %xmm8
  movaps 0x12c0(A), %xmm9
  movaps 0x12d0(A), %xmm6
  movaps 0x12e0(A), %xmm11
  mulps %xmm15, %xmm9
  mulps %xmm14, %xmm6
  addps %xmm9, %xmm2
  movaps 0x12f0(A), %xmm12
  mulps %xmm7, %xmm11
  addps %xmm6, %xmm2
  movaps 0x1300(A), %xmm13
  mulps %xmm8, %xmm12
  addps %xmm11, %xmm2
  movaps 0x1310(A), %xmm10
  mulps %xmm15, %xmm13
  addps %xmm12, %xmm2
  movaps 0x1320(A), %xmm9
  mulps %xmm14, %xmm10
  addps %xmm13, %xmm3
  movaps 0x1330(A), %xmm6
  mulps %xmm7, %xmm9
  addps %xmm10, %xmm3
  movaps 0x1340(A), %xmm11
  mulps %xmm8, %xmm6
  addps %xmm9, %xmm3
  movaps 0x1350(A), %xmm12
  mulps %xmm15, %xmm11
  addps %xmm6, %xmm3
  movaps 0x1360(A), %xmm13
  mulps %xmm14, %xmm12
  addps %xmm11, %xmm4
  movaps 0x1370(A), %xmm10
  mulps %xmm7, %xmm13
  addps %xmm12, %xmm4
  movaps 0x1380(A), %xmm9
  mulps %xmm8, %xmm10
  addps %xmm13, %xmm4
  movaps 0x1390(A), %xmm6
  mulps %xmm15, %xmm9
  addps %xmm10, %xmm4
  movaps 0x13a0(A), %xmm11
  mulps %xmm14, %xmm6
  addps %xmm9, %xmm5
  movaps 0x13b0(A), %xmm12
  mulps %xmm7, %xmm11
  addps %xmm6, %xmm5
  mulps %xmm8, %xmm12
  addps %xmm11, %xmm5
  addps %xmm12, %xmm5

  .align 16
jump_74:

  # Check norm of product ||A(4,4)||*||B(4,3)||.
  movss 0x4c(A), %xmm13
  mulss 0x48(B), %xmm13
  comiss tolerance, %xmm13
  jbe jump_75

  # Calculate C(4,3) += A(4,4)*B(4,3).
  movaps 0x440(B), %xmm10
  movaps 0x450(B), %xmm9
  movaps 0x460(B), %xmm6
  movaps 0x470(B), %xmm11
  movaps 0x13c0(A), %xmm12
  movaps 0x13d0(A), %xmm15
  movaps 0x13e0(A), %xmm14
  mulps %xmm10, %xmm12
  mulps %xmm9, %xmm15
  addps %xmm12, %xmm2
  movaps 0x13f0(A), %xmm7
  mulps %xmm6, %xmm14
  addps %xmm15, %xmm2
  movaps 0x1400(A), %xmm8
  mulps %xmm11, %xmm7
  addps %xmm14, %xmm2
  movaps 0x1410(A), %xmm13
  mulps %xmm10, %xmm8
  addps %xmm7, %xmm2
  movaps 0x1420(A), %xmm12
  mulps %xmm9, %xmm13
  addps %xmm8, %xmm3
  movaps 0x1430(A), %xmm15
  mulps %xmm6, %xmm12
  addps %xmm13, %xmm3
  movaps 0x1440(A), %xmm14
  mulps %xmm11, %xmm15
  addps %xmm12, %xmm3
  movaps 0x1450(A), %xmm7
  mulps %xmm10, %xmm14
  addps %xmm15, %xmm3
  movaps 0x1460(A), %xmm8
  mulps %xmm9, %xmm7
  addps %xmm14, %xmm4
  movaps 0x1470(A), %xmm13
  mulps %xmm6, %xmm8
  addps %xmm7, %xmm4
  movaps 0x1480(A), %xmm12
  mulps %xmm11, %xmm13
  addps %xmm8, %xmm4
  movaps 0x1490(A), %xmm15
  mulps %xmm10, %xmm12
  addps %xmm13, %xmm4
  movaps 0x14a0(A), %xmm14
  mulps %xmm9, %xmm15
  addps %xmm12, %xmm5
  movaps 0x14b0(A), %xmm7
  mulps %xmm6, %xmm14
  addps %xmm15, %xmm5
  mulps %xmm11, %xmm7
  addps %xmm14, %xmm5
  addps %xmm7, %xmm5

  .align 16
jump_75:

  # Multiply C(4,3) by alpha.
  mulps alpha, %xmm2
  mulps alpha, %xmm3
  mulps alpha, %xmm4
  mulps alpha, %xmm5

  # Add accumulated C(4,3) to already existing.
  addps 0x440(C), %xmm2
  addps 0x450(C), %xmm3
  addps 0x460(C), %xmm4
  addps 0x470(C), %xmm5

  # Write out C(4,3) submatrix block.
  movaps %xmm2, 0x440(C)
  movaps %xmm3, 0x450(C)
  movaps %xmm4, 0x460(C)
  movaps %xmm5, 0x470(C)

  # Reset C(4,4) matrix block accumulators.
  xorps %xmm8, %xmm8
  xorps %xmm13, %xmm13
  xorps %xmm12, %xmm12
  xorps %xmm15, %xmm15

  .align 16
jump_76:

  # Check norm of product ||A(4,1)||*||B(1,4)||.
  movss 0x40(A), %xmm14
  mulss 0x1c(B), %xmm14
  comiss tolerance, %xmm14
  jbe jump_77

  # Calculate C(4,4) += A(4,1)*B(1,4).
  movaps 0x180(B), %xmm7
  movaps 0x190(B), %xmm10
  movaps 0x1a0(B), %xmm9
  movaps 0x1b0(B), %xmm6
  movaps 0x10c0(A), %xmm11
  movaps 0x10d0(A), %xmm2
  movaps 0x10e0(A), %xmm3
  mulps %xmm7, %xmm11
  mulps %xmm10, %xmm2
  addps %xmm11, %xmm8
  movaps 0x10f0(A), %xmm4
  mulps %xmm9, %xmm3
  addps %xmm2, %xmm8
  movaps 0x1100(A), %xmm5
  mulps %xmm6, %xmm4
  addps %xmm3, %xmm8
  movaps 0x1110(A), %xmm14
  mulps %xmm7, %xmm5
  addps %xmm4, %xmm8
  movaps 0x1120(A), %xmm11
  mulps %xmm10, %xmm14
  addps %xmm5, %xmm13
  movaps 0x1130(A), %xmm2
  mulps %xmm9, %xmm11
  addps %xmm14, %xmm13
  movaps 0x1140(A), %xmm3
  mulps %xmm6, %xmm2
  addps %xmm11, %xmm13
  movaps 0x1150(A), %xmm4
  mulps %xmm7, %xmm3
  addps %xmm2, %xmm13
  movaps 0x1160(A), %xmm5
  mulps %xmm10, %xmm4
  addps %xmm3, %xmm12
  movaps 0x1170(A), %xmm14
  mulps %xmm9, %xmm5
  addps %xmm4, %xmm12
  movaps 0x1180(A), %xmm11
  mulps %xmm6, %xmm14
  addps %xmm5, %xmm12
  movaps 0x1190(A), %xmm2
  mulps %xmm7, %xmm11
  addps %xmm14, %xmm12
  movaps 0x11a0(A), %xmm3
  mulps %xmm10, %xmm2
  addps %xmm11, %xmm15
  movaps 0x11b0(A), %xmm4
  mulps %xmm9, %xmm3
  addps %xmm2, %xmm15
  mulps %xmm6, %xmm4
  addps %xmm3, %xmm15
  addps %xmm4, %xmm15

  .align 16
jump_77:

  # Check norm of product ||A(4,2)||*||B(2,4)||.
  movss 0x44(A), %xmm5
  mulss 0x2c(B), %xmm5
  comiss tolerance, %xmm5
  jbe jump_78

  # Calculate C(4,4) += A(4,2)*B(2,4).
  movaps 0x280(B), %xmm14
  movaps 0x290(B), %xmm11
  movaps 0x2a0(B), %xmm2
  movaps 0x2b0(B), %xmm3
  movaps 0x11c0(A), %xmm4
  movaps 0x11d0(A), %xmm7
  movaps 0x11e0(A), %xmm10
  mulps %xmm14, %xmm4
  mulps %xmm11, %xmm7
  addps %xmm4, %xmm8
  movaps 0x11f0(A), %xmm9
  mulps %xmm2, %xmm10
  addps %xmm7, %xmm8
  movaps 0x1200(A), %xmm6
  mulps %xmm3, %xmm9
  addps %xmm10, %xmm8
  movaps 0x1210(A), %xmm5
  mulps %xmm14, %xmm6
  addps %xmm9, %xmm8
  movaps 0x1220(A), %xmm4
  mulps %xmm11, %xmm5
  addps %xmm6, %xmm13
  movaps 0x1230(A), %xmm7
  mulps %xmm2, %xmm4
  addps %xmm5, %xmm13
  movaps 0x1240(A), %xmm10
  mulps %xmm3, %xmm7
  addps %xmm4, %xmm13
  movaps 0x1250(A), %xmm9
  mulps %xmm14, %xmm10
  addps %xmm7, %xmm13
  movaps 0x1260(A), %xmm6
  mulps %xmm11, %xmm9
  addps %xmm10, %xmm12
  movaps 0x1270(A), %xmm5
  mulps %xmm2, %xmm6
  addps %xmm9, %xmm12
  movaps 0x1280(A), %xmm4
  mulps %xmm3, %xmm5
  addps %xmm6, %xmm12
  movaps 0x1290(A), %xmm7
  mulps %xmm14, %xmm4
  addps %xmm5, %xmm12
  movaps 0x12a0(A), %xmm10
  mulps %xmm11, %xmm7
  addps %xmm4, %xmm15
  movaps 0x12b0(A), %xmm9
  mulps %xmm2, %xmm10
  addps %xmm7, %xmm15
  mulps %xmm3, %xmm9
  addps %xmm10, %xmm15
  addps %xmm9, %xmm15

  .align 16
jump_78:

  # Check norm of product ||A(4,3)||*||B(3,4)||.
  movss 0x48(A), %xmm6
  mulss 0x3c(B), %xmm6
  comiss tolerance, %xmm6
  jbe jump_79

  # Calculate C(4,4) += A(4,3)*B(3,4).
  movaps 0x380(B), %xmm5
  movaps 0x390(B), %xmm4
  movaps 0x3a0(B), %xmm7
  movaps 0x3b0(B), %xmm10
  movaps 0x12c0(A), %xmm9
  movaps 0x12d0(A), %xmm14
  movaps 0x12e0(A), %xmm11
  mulps %xmm5, %xmm9
  mulps %xmm4, %xmm14
  addps %xmm9, %xmm8
  movaps 0x12f0(A), %xmm2
  mulps %xmm7, %xmm11
  addps %xmm14, %xmm8
  movaps 0x1300(A), %xmm3
  mulps %xmm10, %xmm2
  addps %xmm11, %xmm8
  movaps 0x1310(A), %xmm6
  mulps %xmm5, %xmm3
  addps %xmm2, %xmm8
  movaps 0x1320(A), %xmm9
  mulps %xmm4, %xmm6
  addps %xmm3, %xmm13
  movaps 0x1330(A), %xmm14
  mulps %xmm7, %xmm9
  addps %xmm6, %xmm13
  movaps 0x1340(A), %xmm11
  mulps %xmm10, %xmm14
  addps %xmm9, %xmm13
  movaps 0x1350(A), %xmm2
  mulps %xmm5, %xmm11
  addps %xmm14, %xmm13
  movaps 0x1360(A), %xmm3
  mulps %xmm4, %xmm2
  addps %xmm11, %xmm12
  movaps 0x1370(A), %xmm6
  mulps %xmm7, %xmm3
  addps %xmm2, %xmm12
  movaps 0x1380(A), %xmm9
  mulps %xmm10, %xmm6
  addps %xmm3, %xmm12
  movaps 0x1390(A), %xmm14
  mulps %xmm5, %xmm9
  addps %xmm6, %xmm12
  movaps 0x13a0(A), %xmm11
  mulps %xmm4, %xmm14
  addps %xmm9, %xmm15
  movaps 0x13b0(A), %xmm2
  mulps %xmm7, %xmm11
  addps %xmm14, %xmm15
  mulps %xmm10, %xmm2
  addps %xmm11, %xmm15
  addps %xmm2, %xmm15

  .align 16
jump_79:

  # Check norm of product ||A(4,4)||*||B(4,4)||.
  movss 0x4c(A), %xmm3
  mulss 0x4c(B), %xmm3
  comiss tolerance, %xmm3
  jbe jump_80

  # Calculate C(4,4) += A(4,4)*B(4,4).
  movaps 0x480(B), %xmm6
  movaps 0x490(B), %xmm9
  movaps 0x4a0(B), %xmm14
  movaps 0x4b0(B), %xmm11
  movaps 0x13c0(A), %xmm2
  movaps 0x13d0(A), %xmm5
  movaps 0x13e0(A), %xmm4
  mulps %xmm6, %xmm2
  mulps %xmm9, %xmm5
  addps %xmm2, %xmm8
  movaps 0x13f0(A), %xmm7
  mulps %xmm14, %xmm4
  addps %xmm5, %xmm8
  movaps 0x1400(A), %xmm10
  mulps %xmm11, %xmm7
  addps %xmm4, %xmm8
  movaps 0x1410(A), %xmm3
  mulps %xmm6, %xmm10
  addps %xmm7, %xmm8
  movaps 0x1420(A), %xmm2
  mulps %xmm9, %xmm3
  addps %xmm10, %xmm13
  movaps 0x1430(A), %xmm5
  mulps %xmm14, %xmm2
  addps %xmm3, %xmm13
  movaps 0x1440(A), %xmm4
  mulps %xmm11, %xmm5
  addps %xmm2, %xmm13
  movaps 0x1450(A), %xmm7
  mulps %xmm6, %xmm4
  addps %xmm5, %xmm13
  movaps 0x1460(A), %xmm10
  mulps %xmm9, %xmm7
  addps %xmm4, %xmm12
  movaps 0x1470(A), %xmm3
  mulps %xmm14, %xmm10
  addps %xmm7, %xmm12
  movaps 0x1480(A), %xmm2
  mulps %xmm11, %xmm3
  addps %xmm10, %xmm12
  movaps 0x1490(A), %xmm5
  mulps %xmm6, %xmm2
  addps %xmm3, %xmm12
  movaps 0x14a0(A), %xmm4
  mulps %xmm9, %xmm5
  addps %xmm2, %xmm15
  movaps 0x14b0(A), %xmm7
  mulps %xmm14, %xmm4
  addps %xmm5, %xmm15
  mulps %xmm11, %xmm7
  addps %xmm4, %xmm15
  addps %xmm7, %xmm15

  .align 16
jump_80:

  # Multiply C(4,4) by alpha.
  mulps alpha, %xmm8
  mulps alpha, %xmm13
  mulps alpha, %xmm12
  mulps alpha, %xmm15

  # Add accumulated C(4,4) to already existing.
  addps 0x480(C), %xmm8
  addps 0x490(C), %xmm13
  addps 0x4a0(C), %xmm12
  addps 0x4b0(C), %xmm15

  # Write out C(4,4) submatrix block.
  movaps %xmm8, 0x480(C)
  movaps %xmm13, 0x490(C)
  movaps %xmm12, 0x4a0(C)
  movaps %xmm15, 0x4b0(C)

  # Loop end.
  inc index
  mov index, base_pointer
  cmp number_stream_elements, index
  jb stream_loop

  .align 16
stream_done:

  # Pop registers from stack.
  pop C
  pop B
  pop A
  pop base_pointer
  pop index

  # Return from function.
  ret

  # Function epilog.
  .size spamm_stream_kernel, .-spamm_stream_kernel

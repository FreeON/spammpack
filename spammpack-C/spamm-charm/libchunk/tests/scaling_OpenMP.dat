# exponential decay
# lambda = 0.995
# N = 4096
# b = 64
# icc/mkl
#
# tolerance = 0
# complexity = 1
#
# "threads" "walltime [s]"
1 26.18
2 13.34
4 7.02
8 3.79
12 2.63
16 2.12
32 1.37
40 1.33
48 1.32


48:1.43,
1:24.26,
2:12.53,
4:6.45,
8:3.50,
12:2.52,
16:2.00,
32:1.29,
40:1.52,


48:1.28,
1:23.43,
2:12.05,
4:6.32,
8:3.38,
12:2.53,
16:1.95,
32:1.31,
40:1.23,


48:1.36,
1:22.19,
2:11.50,
4:6.04,
8:3.21,
12:2.40,
16:1.88,
32:1.29,
40:1.36,


# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 0 -c
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 48 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 0.00e+00, 1.32 seconds
# product complexity = 262144 out of 262144, complexity ratio = 1.000
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 0
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 1 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 0.00e+00, 26.18 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 0
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 2 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 0.00e+00, 13.34 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 0
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 4 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 0.00e+00, 7.02 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 0
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 8 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 0.00e+00, 3.79 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 0
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 12 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 0.00e+00, 2.63 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 0
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 16 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 0.00e+00, 2.12 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 0
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 32 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 0.00e+00, 1.37 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 0
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 40 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 0.00e+00, 1.33 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 1e-8 -c
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 48 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 1.00e-08, 1.43 seconds
# product complexity = 245432 out of 262144, complexity ratio = 0.936
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 1e-8
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 1 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 1.00e-08, 24.26 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 1e-8
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 2 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 1.00e-08, 12.53 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 1e-8
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 4 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 1.00e-08, 6.45 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 1e-8
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 8 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 1.00e-08, 3.50 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 1e-8
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 12 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 1.00e-08, 2.52 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 1e-8
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 16 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 1.00e-08, 2.00 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 1e-8
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 32 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 1.00e-08, 1.29 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 1e-8
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 40 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 1.00e-08, 1.52 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 1e-7 -c
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 48 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 1.00e-07, 1.28 seconds
# product complexity = 236638 out of 262144, complexity ratio = 0.903
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 1e-7
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 1 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 1.00e-07, 23.43 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 1e-7
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 2 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 1.00e-07, 12.05 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 1e-7
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 4 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 1.00e-07, 6.32 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 1e-7
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 8 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 1.00e-07, 3.38 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 1e-7
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 12 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 1.00e-07, 2.53 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 1e-7
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 16 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 1.00e-07, 1.95 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 1e-7
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 32 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 1.00e-07, 1.31 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 1e-7
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 40 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 1.00e-07, 1.23 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 1e-6 -c
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 48 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 1.00e-06, 1.36 seconds
# product complexity = 225254 out of 262144, complexity ratio = 0.859
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 1e-6
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 1 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 1.00e-06, 22.19 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 1e-6
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 2 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 1.00e-06, 11.50 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 1e-6
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 4 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 1.00e-06, 6.04 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 1e-6
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 8 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 1.00e-06, 3.21 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 1e-6
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 12 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 1.00e-06, 2.40 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 1e-6
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 16 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 1.00e-06, 1.88 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 1e-6
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 32 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 1.00e-06, 1.29 seconds
# running: chunk_multiply -N 4096 -b 64 -T exp_decay -l 0.995 -v --tolerance 1e-6
# allocated A_dense, sizeof(A_dense) = 134217728 bytes
# exponential decay, lambda = 9.950000e-01
# A[1][N]/A[1][1] = 1.217631e-09
# random matrix, norm_2 = 4.653877e+05, norm_2 of chunk = 4.653877e+05
# done multiplying using 40 OpenMP threads a 4096x4096 chunk with 64x64 basic blocks, tolerance 1.00e-06, 1.36 seconds
